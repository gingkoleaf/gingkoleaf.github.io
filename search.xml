<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pipeline序列化问题</title>
      <link href="/2019/07/22/jenkins/jenkins-serialization/"/>
      <url>/2019/07/22/jenkins/jenkins-serialization/</url>
      
        <content type="html"><![CDATA[<p>Jenkins支持所有运行的job都可以在服务重启时中断、暂停在服务重启后恢复运行。为了实现这一点，Jenkins pipeline中定义的所有变量都必须是可序列化的。类似的，Jenkins也必须能序列化构建中节点和子job之间的全局变量的状态。</p><p>遇到<code>java.io.NotSerializableException</code>问题的一般方法</p><ol><li>将不可序列化的代码封装在一个用@NonCPS注释的函数中。这告诉Jenkins函数包含不可序列化的部分，必须在不停顿的情况下执行。</li><li>尝试取消不可序列化变量的定义</li></ol><p>更多详细信息参见<a href="https://github.com/jenkinsci/pipeline-plugin/blob/master/TUTORIAL.md#serializing-local-variables" target="_blank" rel="noopener">链接</a></p><p>json解析</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> groovy.json.JsonSlurperClassic </span><br><span class="line"></span><br><span class="line"><span class="meta">@NonCPS</span></span><br><span class="line"><span class="keyword">def</span> jsonParse(<span class="keyword">def</span> json) &#123;</span><br><span class="line">    <span class="keyword">new</span> groovy.json.JsonSlurperClassic().parseText(json)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node(<span class="string">'master'</span>) &#123;</span><br><span class="line">    <span class="keyword">def</span> config =  jsonParse(readFile(<span class="string">"config.json"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> db = config[<span class="string">"database"</span>][<span class="string">"address"</span>]</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://stackoverflow.com/questions/42537744/jenkins-2-pipeline-serialization-problems-in-global-function" target="_blank" rel="noopener">参考1</a><br><a href="https://stackoverflow.com/questions/37864542/jenkins-pipeline-notserializableexception-groovy-json-internal-lazymap" target="_blank" rel="noopener">参考2</a></p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> 持续集成 </category>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> pipeline </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-log命令</title>
      <link href="/2019/07/22/git/git-cmd-log/"/>
      <url>/2019/07/22/git/git-cmd-log/</url>
      
        <content type="html"><![CDATA[<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log [&lt;options&gt;] [&lt;revision range&gt;] [[--] &lt;path&gt;…​]</span><br></pre></td></tr></table></figure><h3 id="命令参数选项"><a href="#命令参数选项" class="headerlink" title="命令参数选项"></a>命令参数选项</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-p</td><td>以补丁格式显示每次提交之间的差异</td></tr><tr><td>–stat</td><td>显示每次提交的文件修改统计信息</td></tr><tr><td>–shortstat</td><td>只显示 –stat 中最后的行数修改添加移除统计</td></tr><tr><td>–name-only</td><td>仅在提交信息后显示已修改的文件清单</td></tr><tr><td>–name-status</td><td>显示新增、修改、删除的文件清单</td></tr><tr><td>–abbrev-commit</td><td>仅显示 SHA-1 的前几个字符，而非所有的 40 个字符</td></tr><tr><td>–relative-date</td><td>使用较短的相对时间显示（比如”2 weeks ago”）</td></tr><tr><td>–graph</td><td>显示 ASCII 图形表示的分支合并历史</td></tr><tr><td>–pretty</td><td>使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式，格式见下表）</td></tr><tr><td>–oneline</td><td>–pretty=oneline –abbrev-commit 的简化用法</td></tr><tr><td>-(n)</td><td>仅显示最近的 n 条提交</td></tr><tr><td>–since, –after</td><td>仅显示指定时间之后的提交, 可以使用各种时间格式，比如说具体的某一天（”2008-01-15”），或者是多久以前（”2 years 1 day 3 minutes ago”）</td></tr><tr><td>–until, –before</td><td>仅显示指定时间之前的提交</td></tr><tr><td>–author</td><td>仅显示指定作者相关的提交</td></tr><tr><td>–committer</td><td>仅显示指定提交者相关的提交</td></tr></tbody></table><p>format常用的格式占位符写法及其代表的意义。</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>%H</td><td>提交对象（commit）的完整哈希字串</td></tr><tr><td>%h</td><td>提交对象的简短哈希字串</td></tr><tr><td>%T</td><td>树对象（tree）的完整哈希字串</td></tr><tr><td>%t</td><td>树对象的简短哈希字串</td></tr><tr><td>%P</td><td>父对象（parent）的完整哈希字串</td></tr><tr><td>%p</td><td>父对象的简短哈希字串</td></tr><tr><td>%an</td><td>作者（author）的名字</td></tr><tr><td>%ae</td><td>作者的电子邮件地址</td></tr><tr><td>%ad</td><td>作者修订日期（可以用 -date= 选项定制格式）</td></tr><tr><td>%ar</td><td>作者修订日期，按多久以前的方式显示</td></tr><tr><td>%cn</td><td>提交者(committer)的名字</td></tr><tr><td>ce</td><td>提交者的电子邮件地址</td></tr><tr><td>%cd</td><td>提交日期</td></tr><tr><td>%cr</td><td>提交日期，按多久以前的方式显示</td></tr><tr><td>%s</td><td>提交说明</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos下jenkins的安装</title>
      <link href="/2019/07/16/centos/centos-jenkins-install/"/>
      <url>/2019/07/16/centos/centos-jenkins-install/</url>
      
        <content type="html"><![CDATA[<h3 id="通过设置jenkins官方repo仓库下载"><a href="#通过设置jenkins官方repo仓库下载" class="headerlink" title="通过设置jenkins官方repo仓库下载"></a>通过设置jenkins官方repo仓库下载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br><span class="line">sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br><span class="line">yum install jenkins</span><br><span class="line">cat /etc/rc.d/init.d/jenkins</span><br></pre></td></tr></table></figure><p>安装后，jenkins.war默认地址为<br>JENKINS_WAR=”/usr/lib/jenkins/jenkins.war”</p><p>jenkins的config地址为<br>JENKINS_CONFIG=/etc/sysconfig/jenkins</p><h3 id="下载rpm安装"><a href="#下载rpm安装" class="headerlink" title="下载rpm安装"></a>下载rpm安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://pkg.jenkins.io/redhat-stable/jenkins-2.176.1-1.1.noarch.rpm</span><br><span class="line">rpm -ivh jenkins-2.176.1-1.1.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="下载war包"><a href="#下载war包" class="headerlink" title="下载war包"></a>下载war包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war</span><br><span class="line">java -jar jenkins.war</span><br></pre></td></tr></table></figure><h3 id="虚拟机中启动jenkins后不能访问"><a href="#虚拟机中启动jenkins后不能访问" class="headerlink" title="虚拟机中启动jenkins后不能访问"></a>虚拟机中启动jenkins后不能访问</h3><ol><li>关闭防火墙</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins通过Grab下载依赖失败</title>
      <link href="/2019/07/16/groovy/jenkins-groovy-grape/"/>
      <url>/2019/07/16/groovy/jenkins-groovy-grape/</url>
      
        <content type="html"><![CDATA[<p><a href="https://docs.groovy-lang.org/latest/html/documentation/grape.html" target="_blank" rel="noopener">官方文档</a><br><a href="http://wiki.jikexueyuan.com/project/groovy-introduction/grape-dependency-manager.html" target="_blank" rel="noopener">极客学院翻译</a></p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在使用Jenkins的 pipeline as code 特性时，遇到使用第三方jar的情况，使用了<br><code>@Grab(group=&#39;org.restlet&#39;, module=&#39;org.restlet&#39;, version=&#39;1.1.6&#39;)</code>注解，但是在Jenkins job运行时下载依赖失败。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>grape默认时采用maven的 mvnrepository.com 来搜索依赖包，出问题的Jenkins master上是不能访问该仓库的，所以下载依赖失败。</p><p>在${JENKINS_HOME}/.groovy/目录下新增文件grapeConfig.xml，指定仓库地址为内网仓库或可访问的maven镜像仓库。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ivysettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">settings</span> <span class="attr">defaultResolver</span>=<span class="string">"downloadGrapes"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resolvers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">chain</span> <span class="attr">name</span>=<span class="string">"downloadGrapes"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ibiblio</span> <span class="attr">name</span>=<span class="string">"public"</span> <span class="attr">root</span>=<span class="string">"https://mirrors.huaweicloud.com/repository/maven/"</span> <span class="attr">m2compatible</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">chain</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resolvers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ivysettings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>grapeConfig.xml的<a href="https://github.com/apache/groovy/blob/master/src/resources/groovy/grape/defaultGrapeConfig.xml" target="_blank" rel="noopener">默认配置</a>为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ivysettings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">settings</span> <span class="attr">defaultResolver</span>=<span class="string">"downloadGrapes"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resolvers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">chain</span> <span class="attr">name</span>=<span class="string">"downloadGrapes"</span> <span class="attr">returnFirst</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filesystem</span> <span class="attr">name</span>=<span class="string">"cachedGrapes"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ivy</span> <span class="attr">pattern</span>=<span class="string">"$&#123;user.home&#125;/.groovy/grapes/[organisation]/[module]/ivy-[revision].xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifact</span> <span class="attr">pattern</span>=<span class="string">"$&#123;user.home&#125;/.groovy/grapes/[organisation]/[module]/[type]s/[artifact]-[revision](-[classifier]).[ext]"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">filesystem</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ibiblio</span> <span class="attr">name</span>=<span class="string">"localm2"</span> <span class="attr">root</span>=<span class="string">"file:$&#123;user.home&#125;/.m2/repository/"</span> <span class="attr">checkmodified</span>=<span class="string">"true"</span> <span class="attr">changingPattern</span>=<span class="string">".*"</span> <span class="attr">changingMatcher</span>=<span class="string">"regexp"</span> <span class="attr">m2compatible</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- todo add 'endorsed groovy extensions' resolver here --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ibiblio</span> <span class="attr">name</span>=<span class="string">"jcenter"</span> <span class="attr">root</span>=<span class="string">"https://jcenter.bintray.com/"</span> <span class="attr">m2compatible</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ibiblio</span> <span class="attr">name</span>=<span class="string">"ibiblio"</span> <span class="attr">m2compatible</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">chain</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resolvers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ivysettings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Jenkins中grape下载的第三方jar默认是缓存在${JENKINS_HOME}/.groovy/grapes/目录下。可以通过添加Jenkins的启动参数<code>-Dgroovy.grape.report.downloads=true</code> 和 <code>-Divy.message.logger.level=4</code>，在jenkins的日志中观察第三方依赖的下载过程。</p>]]></content>
      
      
      <categories>
          
          <category> language </category>
          
          <category> groovy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> groovy </tag>
            
            <tag> grape </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-commit命令</title>
      <link href="/2019/07/16/git/git-cmd-commit/"/>
      <url>/2019/07/16/git/git-cmd-commit/</url>
      
        <content type="html"><![CDATA[<h2 id="git-commit-–amend"><a href="#git-commit-–amend" class="headerlink" title="git commit –amend"></a>git commit –amend</h2><font color="red">建议 git commit –amend 命令使用在未push到远端的场景。</font><h3 id="提交还未push到远端"><a href="#提交还未push到远端" class="headerlink" title="提交还未push到远端"></a>提交还未push到远端</h3><p>在某次修改时，修改了README.md文件，同时新增了amendTest文件。但是在commit的时候，只提交了README.md，忘记了amendTest文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitTest]# git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is up to date with 'origin/master'.</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use "git add &lt;file&gt;..." to update what will be committed)</span><br><span class="line">  (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">        modified:   README.md</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use "git add &lt;file&gt;..." to include in what will be committed)</span><br><span class="line"></span><br><span class="line">        amendTest</span><br><span class="line"></span><br><span class="line">no changes added to commit (use "git add" and/or "git commit -a")</span><br><span class="line">[root@localhost gitTest]# git commit -am 'add amendTest file'</span><br><span class="line">[master ce1e058] add amendTest file</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">[root@localhost gitTest]# git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is ahead of 'origin/master' by 1 commit.</span><br><span class="line">  (use "git push" to publish your local commits)</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use "git add &lt;file&gt;..." to include in what will be committed)</span><br><span class="line"></span><br><span class="line">        amendTest</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use "git add" to track)</span><br><span class="line">[root@localhost gitTest]# git log -n 3 --oneline</span><br><span class="line">a889479 (HEAD -&gt; master) add amendTest file</span><br><span class="line">11843d7 (origin/master, origin/HEAD) update</span><br><span class="line">bf2a12f update</span><br><span class="line">[root@localhost gitTest]# git diff --stat HEAD~1 HEAD</span><br><span class="line"> README.md | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">[root@localhost gitTest]#</span><br></pre></td></tr></table></figure><p>此时，如果想将amendTest文件提交，同时不产生新的commit记录(即新提交内容合并到上一次提交中)，可以使用<code>git commit --amend</code>命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitTest]# git add .</span><br><span class="line">[root@localhost gitTest]# git commit --amend</span><br><span class="line">add amendTest file</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Please enter the commit message <span class="keyword">for</span> your changes. Lines starting</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> with <span class="string">'#'</span> will be ignored, and an empty message aborts the commit.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Date:      Sun Jun 30 15:00:20 2019 +0800</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> On branch master</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Your branch is ahead of <span class="string">'origin/master'</span> by 1 commit.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   (use <span class="string">"git push"</span> to publish your <span class="built_in">local</span> commits)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Changes to be committed:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">       modified:   README.md</span></span><br><span class="line"><span class="meta">#</span><span class="bash">       new file:   amendTest</span></span><br><span class="line"> Date: Sun Jun 30 15:00:20 2019 +0800</span><br><span class="line"> 2 files changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 amendTest</span><br><span class="line">[root@localhost gitTest]# git log -n 3 --oneline</span><br><span class="line">d2a42e9 (HEAD -&gt; master) add amendTest file</span><br><span class="line">11843d7 (origin/master, origin/HEAD) update</span><br><span class="line">bf2a12f update</span><br><span class="line">[root@localhost gitTest]# git diff --stat HEAD~1 HEAD</span><br><span class="line"> README.md | 1 +</span><br><span class="line"> amendTest | 1 +</span><br><span class="line"> 2 files changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><p>使用该<code>git commit --amend</code>命令后，会生成一个新的commitid，合并本次提交与上一次提交内容。</p><h3 id="提交已经push到远端"><a href="#提交已经push到远端" class="headerlink" title="提交已经push到远端"></a>提交已经push到远端</h3><p>如果上一次commit已经push到远端，使用<code>git commit --amend</code>提交后，在push到远端时会被拒绝，通过<code>git status</code>提示发现当前分支与origin/master已经分叉</p><p>通过<code>git pull</code>将origin/master代码merge过来后，重新push可以推送成功</p><p>但是通过<code>git log</code>可以发现远端仍是有两次提交记录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitTest]# git log -n 3 --oneline</span><br><span class="line">e30f084 (HEAD -&gt; master) add amendTest file</span><br><span class="line">11843d7 (origin/master, origin/HEAD) update</span><br><span class="line">bf2a12f update</span><br><span class="line">[root@localhost gitTest]# git push origin master</span><br><span class="line">Enumerating objects: 5, done.</span><br><span class="line">Counting objects: 100% (5/5), done.</span><br><span class="line">Compressing objects: 100% (3/3), done.</span><br><span class="line">Writing objects: 100% (3/3), 404 bytes | 202.00 KiB/s, done.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To github.com:daybreakgx/gitTest.git</span><br><span class="line">   11843d7..e30f084  master -&gt; master</span><br><span class="line">[root@localhost gitTest]# git log -n 3 --oneline</span><br><span class="line">e30f084 (HEAD -&gt; master, origin/master, origin/HEAD) add amendTest file</span><br><span class="line">11843d7 update</span><br><span class="line">bf2a12f update</span><br><span class="line">[root@localhost gitTest]# git add .</span><br><span class="line">[root@localhost gitTest]# git commit --amend</span><br><span class="line">[master 7e0656c] add amendTest file add 2</span><br><span class="line"> Date: Sun Jun 30 15:25:00 2019 +0800</span><br><span class="line"> 2 files changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 amendTest</span><br><span class="line">[root@localhost gitTest]# git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch and 'origin/master' have diverged,</span><br><span class="line">and have 1 and 1 different commits each, respectively.</span><br><span class="line">  (use "git pull" to merge the remote branch into yours)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">[root@localhost gitTest]# git log -n 3 --oneline</span><br><span class="line">7e0656c (HEAD -&gt; master) add amendTest file add 2</span><br><span class="line">11843d7 update</span><br><span class="line">bf2a12f update</span><br><span class="line"></span><br><span class="line">[root@localhost gitTest]# git push origin master</span><br><span class="line">To github.com:daybreakgx/gitTest.git</span><br><span class="line"> ! [rejected]        master -&gt; master (non-fast-forward)</span><br><span class="line">error: failed to push some refs to 'git@github.com:daybreakgx/gitTest.git'</span><br><span class="line">hint: Updates were rejected because the tip of your current branch is behind</span><br><span class="line">hint: its remote counterpart. Integrate the remote changes (e.g.</span><br><span class="line">hint: 'git pull ...') before pushing again.</span><br><span class="line">hint: See the 'Note about fast-forwards' in 'git push --help' for details.</span><br><span class="line"></span><br><span class="line">[root@localhost gitTest]# git pull</span><br><span class="line">Merge made by the 'recursive' strategy.</span><br><span class="line">[root@localhost gitTest]# git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is ahead of 'origin/master' by 2 commits.</span><br><span class="line">  (use "git push" to publish your local commits)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">[root@localhost gitTest]# git push origin master</span><br><span class="line">Enumerating objects: 6, done.</span><br><span class="line">Counting objects: 100% (6/6), done.</span><br><span class="line">Compressing objects: 100% (3/3), done.</span><br><span class="line">Writing objects: 100% (4/4), 437 bytes | 218.00 KiB/s, done.</span><br><span class="line">Total 4 (delta 2), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (2/2), completed with 1 local object.</span><br><span class="line">To github.com:daybreakgx/gitTest.git</span><br><span class="line">   e30f084..bef9cc4  master -&gt; master</span><br><span class="line">[root@localhost gitTest]# git log --graph</span><br><span class="line">*   commit bef9cc49c27913ca9924378dd50c0ef50f6d8d48 (HEAD -&gt; master, origin/master, origin/HEAD)</span><br><span class="line">|\  Merge: 7e0656c e30f084</span><br><span class="line">| | Author: daybreakgx &lt;daybreak.gx@gmail.com&gt;</span><br><span class="line">| | Date:   Sun Jun 30 15:27:59 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Merge branch 'master' of github.com:daybreakgx/gitTest</span><br><span class="line">| | </span><br><span class="line">| * commit e30f08487acfe730bfa241e0042a55503d41b791</span><br><span class="line">| | Author: daybreakgx &lt;daybreak.gx@gmail.com&gt;</span><br><span class="line">| | Date:   Sun Jun 30 15:25:00 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     add amendTest file</span><br><span class="line">| | </span><br><span class="line">* | commit 7e0656c521428142bd248153050918a7a5f5d0ab</span><br><span class="line">|/  Author: daybreakgx &lt;daybreak.gx@gmail.com&gt;</span><br><span class="line">|   Date:   Sun Jun 30 15:25:00 2019 +0800</span><br><span class="line">|   </span><br><span class="line">|       add amendTest file add 2</span><br><span class="line">| </span><br><span class="line">* commit 11843d78157ea67dc2d4768366c1f6c446d93071</span><br><span class="line">| Author: daybreakgx &lt;daybreak.gx@gmail.com&gt;</span><br><span class="line">| Date:   Sun Jun 30 14:58:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     update</span><br></pre></td></tr></table></figure><h2 id="撤销git-commit-–amend"><a href="#撤销git-commit-–amend" class="headerlink" title="撤销git commit –amend"></a><a href="https://segmentfault.com/a/1190000014272359" target="_blank" rel="noopener">撤销git commit –amend</a></h2>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-ls-files命令</title>
      <link href="/2019/07/08/git/git-cmd-ls-files/"/>
      <url>/2019/07/08/git/git-cmd-ls-files/</url>
      
        <content type="html"><![CDATA[<p>该命令用于显示暂存区(index)或工作区(working tree)的文件信息</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>git ls-files [-z] [-t] [-v] [-f]<br>        (–[cached|deleted|others|ignored|stage|unmerged|killed|modified])<em><br>        (-[c|d|o|i|s|u|k|m])</em><br>        [–eol]<br>        [-x &lt;pattern>|–exclude=&lt;pattern>]<br>        [-X &lt;file>|–exclude-from=&lt;file>]<br>        [–exclude-per-directory=&lt;file>]<br>        [–exclude-standard]<br>        [–error-unmatch] [–with-tree=&lt;tree-ish>]<br>        [–full-name] [–recurse-submodules]<br>        [–abbrev] [–] [&lt;file>…​]</p><h2 id="命令参数选项"><a href="#命令参数选项" class="headerlink" title="命令参数选项"></a>命令参数选项</h2><ul><li>-c, –cached: 显示暂存区中的文件</li><li>-d, –deleted: 显示删除了的文件</li><li>-m, –modified: 显示修改了的文件</li><li>-i, –ignored: 显示忽略了的文件(满足忽略模式的)</li><li>-o, –others: 显示其他类型的文件(如未追踪的)</li><li>-s, –stage: 按照如下格式显示文件内容<pre><code>[&lt;tag\&gt;] &lt;mode\&gt; &lt;object\&gt; &lt;stage\&gt; &lt;file\&gt;</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-update-index命令</title>
      <link href="/2019/07/07/git/git-cmd-update-index/"/>
      <url>/2019/07/07/git/git-cmd-update-index/</url>
      
        <content type="html"><![CDATA[<p>通常该命令用于将工作区(working tree)中的内容注册到暂存区(index)</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>git update-index<br>         [–add] [–remove | –force-remove] [–replace]<br>         [–refresh] [-q] [–unmerged] [–ignore-missing]<br>         [(–cacheinfo &lt;mode>,&lt;object>,&lt;file>)…​]<br>         [–chmod=(+|-)x]<br>         [–[no-]assume-unchanged]<br>         [–[no-]skip-worktree]<br>         [–[no-]fsmonitor-valid]<br>         [–ignore-submodules]<br>         [–[no-]split-index]<br>         [–[no-|test-|force-]untracked-cache]<br>         [–[no-]fsmonitor]<br>         [–really-refresh] [–unresolve] [–again | -g]<br>         [–info-only] [–index-info]<br>         [-z] [–stdin] [–index-version &lt;n>]<br>         [–verbose]<br>         [–] [&lt;file>…​]</p><h2 id="命令参数选项"><a href="#命令参数选项" class="headerlink" title="命令参数选项"></a>命令参数选项</h2><ul><li>–add: 如果指定的文件不在暂存区(index)中，则将其加入暂存区。</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="增加工作区新文件到暂存区"><a href="#增加工作区新文件到暂存区" class="headerlink" title="增加工作区新文件到暂存区"></a>增加工作区新文件到暂存区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost git_update_index]# git init</span><br><span class="line">Initialized empty Git repository in /root/git_update_index/.git/</span><br><span class="line">[root@localhost git_update_index]# find .git/objects/ -type f</span><br><span class="line">[root@localhost git_update_index]# echo 'version 1' &gt; text.txt</span><br><span class="line">[root@localhost git_update_index]# git status</span><br><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">No commits yet</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use "git add &lt;file&gt;..." to include in what will be committed)</span><br><span class="line"></span><br><span class="line">        text.txt</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use "git add" to track)</span><br><span class="line">[root@localhost git_update_index]# git update-index --add text.txt</span><br><span class="line">[root@localhost git_update_index]# git status</span><br><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">No commits yet</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use "git rm --cached &lt;file&gt;..." to unstage)</span><br><span class="line"></span><br><span class="line">        new file:   text.txt</span><br><span class="line"></span><br><span class="line">[root@localhost git_update_index]# find .git/objects/ -type f</span><br><span class="line">.git/objects/83/baae61804e65cc73a7201a7252750c76066a30</span><br><span class="line">[root@localhost git_update_index]# git cat-file -p 83baae6</span><br><span class="line">version 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-cat-file 命令</title>
      <link href="/2019/07/07/git/git-cmd-cat-file/"/>
      <url>/2019/07/07/git/git-cmd-cat-file/</url>
      
        <content type="html"><![CDATA[<p>该命令用于显示指定对象的信息</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git cat-file (-t [--allow-unknown-type]| -s [--allow-unknown-type]| -e | -p | &lt;type&gt; | --textconv | --filters ) [--path=&lt;path&gt;] &lt;object&gt;</span><br><span class="line">git cat-file (--batch | --batch-check) [ --textconv | --filters ] [--follow-symlinks]</span><br></pre></td></tr></table></figure><h2 id="命令参数选项"><a href="#命令参数选项" class="headerlink" title="命令参数选项"></a>命令参数选项</h2><ul><li>-t: 显示对象类型</li><li>-s: 显示对象大小(bytes)</li><li>-e: 如果对象存在且是有效的，则命令正常返回0；如果对象无效，则命令返回非零值，并在标准错误输入打印错误信息</li><li>-p: 显示对象内容</li><li>–batch: 从标准输入读取对象id，显示对象信息(类型、大小)和对象内容</li><li>–batch-check: 从标准输入读取对象id，显示对象信息(类型、大小)</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitNewTest]# find .git/objects/ -type f</span><br><span class="line">.git/objects/3b/18e512dba79e4c8300dd08aeb37f8e728b8dad</span><br><span class="line">[root@localhost gitNewTest]# git cat-file -p 3b18e512</span><br><span class="line">hello world</span><br><span class="line">[root@localhost gitNewTest]# git cat-file -s 3b18e512</span><br><span class="line">12</span><br><span class="line">[root@localhost gitNewTest]# git cat-file -t 3b18e512</span><br><span class="line">blob</span><br><span class="line">[root@localhost gitNewTest]# git cat-file -e 3b18e512</span><br><span class="line">[root@localhost gitNewTest]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@localhost gitNewTest]# git cat-file -e 3b18e513</span><br><span class="line">fatal: Not a valid object name 3b18e513</span><br><span class="line">[root@localhost gitNewTest]# echo $?</span><br><span class="line">128</span><br><span class="line">[root@localhost gitNewTest]# git cat-file -t 3b18e513</span><br><span class="line">fatal: Not a valid object name 3b18e513</span><br><span class="line">[root@localhost gitNewTest]# echo $?</span><br><span class="line">128</span><br><span class="line">[root@localhost gitNewTest]# git cat-file --batch</span><br><span class="line">3b18e512</span><br><span class="line">3b18e512dba79e4c8300dd08aeb37f8e728b8dad blob 12</span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">33333</span><br><span class="line">33333 missing</span><br><span class="line">^C</span><br><span class="line">[root@localhost gitNewTest]# git cat-file --batch-check</span><br><span class="line">3b18e512</span><br><span class="line">3b18e512dba79e4c8300dd08aeb37f8e728b8dad blob 12</span><br><span class="line">adces</span><br><span class="line">adces missing</span><br><span class="line">^C</span><br><span class="line">[root@localhost gitNewTest]#</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-hash-object 命令</title>
      <link href="/2019/07/07/git/git-cmd-hash-object/"/>
      <url>/2019/07/07/git/git-cmd-hash-object/</url>
      
        <content type="html"><![CDATA[<p>该命令可以计算指定对象的object ID，并且通过指定参数(-w)将指定对象写入数据库中。该ID是个SHA-1哈希值，通过将待存储的数据内容(指定对象内容)加一个头部信息(header)一起做SHA-1校验运算得到的校验和。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git hash-object [-t &lt;type&gt;] [-w] [--path=&lt;file&gt;|--no-filters] [--stdin [--literally]] [--] &lt;file&gt;…​</span><br><span class="line">git hash-object [-t &lt;type&gt;] [-w] --stdin-paths [--no-filters]</span><br></pre></td></tr></table></figure><h2 id="命令参数选项"><a href="#命令参数选项" class="headerlink" title="命令参数选项"></a>命令参数选项</h2><ul><li>-t &lt;type>: 对象类型， 默认为数据对象blob object</li><li>-w: 设置该参数表示要将对象内容写入数据库</li><li>–stdin: 表示从标准输入读取对象内容</li><li>–stdin-paths: 表示从标准输入读取保存对象内容的文件名，每行表示一个文件</li><li>–: 标记后续参数类型，即 – 后面的参数会被解析为file</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitNewTest]# find .git/objects -type f</span><br><span class="line"><span class="meta">#</span><span class="bash"> 从标准输入读取内容写入数据库</span></span><br><span class="line">[root@localhost gitNewTest]# echo "hello world" |git hash-object -w --stdin</span><br><span class="line">3b18e512dba79e4c8300dd08aeb37f8e728b8dad</span><br><span class="line">[root@localhost gitNewTest]# find .git/objects -type f</span><br><span class="line">.git/objects/3b/18e512dba79e4c8300dd08aeb37f8e728b8dad</span><br><span class="line">[root@localhost gitNewTest]# tree .git/objects/</span><br><span class="line">.git/objects/</span><br><span class="line">├── 3b                                          # SHA-1哈希值前两个字符做目录</span><br><span class="line">│   └── 18e512dba79e4c8300dd08aeb37f8e728b8dad  # SHA-1哈希值剩余38个字符做文件名</span><br><span class="line">├── info</span><br><span class="line">└── pack</span><br><span class="line"></span><br><span class="line">3 directories, 1 file</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 从文件中读取内容写入数据库</span></span><br><span class="line">[root@localhost gitNewTest]# echo 'version 1' &gt; text.txt</span><br><span class="line">[root@localhost gitNewTest]# cat text.txt</span><br><span class="line">version 1</span><br><span class="line">[root@localhost gitNewTest]# git hash-object -w text.txt</span><br><span class="line">83baae61804e65cc73a7201a7252750c76066a30</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yum源优先级配置</title>
      <link href="/2019/06/30/centos/yum-priorities/"/>
      <url>/2019/06/30/centos/yum-priorities/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> yum </tag>
            
            <tag> TODO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>epel配置与使用</title>
      <link href="/2019/06/30/centos/epel/"/>
      <url>/2019/06/30/centos/epel/</url>
      
        <content type="html"><![CDATA[<p>为了保证稳定性，RHEL及其衍生版本Centos等的官方rpm repository中提供的软件版本都相对比较滞后。为了能使用相对较新的软件版本，可以使用EPEL扩展源。</p><p>EPEL(Extra Packages for Enterprise Linux)，是由Fedora社区维护的，为RHEL系列操作系统提供高质量软件包的项目。</p><h3 id="yum命令安装"><a href="#yum命令安装" class="headerlink" title="yum命令安装"></a>yum命令安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><h3 id="rpm包安装"><a href="#rpm包安装" class="headerlink" title="rpm包安装"></a>rpm包安装</h3><p>根据系统CPU架构及操作系统版本，到 <a href="https://dl.fedoraproject.org/pub/epel/" target="_blank" rel="noopener">https://dl.fedoraproject.org/pub/epel/</a> 下载对应的rpm进行安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -ivh epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum clean all; yum makecache</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum repolist</span></span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line"> * epel: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">repo id                            repo name                              status</span><br><span class="line">base/7/x86_64            CentOS-7 - Base - mirrors.aliyun.com             10,019</span><br><span class="line">epel/x86_64              Extra Packages for Enterprise Linux 7 - x86_64   13,242</span><br><span class="line">extras/7/x86_64          CentOS-7 - Extras - mirrors.aliyun.com           419</span><br><span class="line">updates/7/x86_64         CentOS-7 - Updates - mirrors.aliyun.com          2,137</span><br><span class="line">repolist: 25,817</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> epel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git内部原理</title>
      <link href="/2019/06/30/git/git-internals/"/>
      <url>/2019/06/30/git/git-internals/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Git从根本上说是一个基于内容寻址(content-addressable)的文件系统，并在此之上提供一个VCS的用户界面。</p><p>最初git只是为VCS提供的一套工具集，而不是一个完成的VCS，所以git存在一系列命令能完成一些底层操作，这些命令被设计为能以Unix-style连接(chained)在一起，或者可以被脚本调用。这些命令被称为底层(plumbing)命令。相对应的那些更友好(user-friendly)的命令被称为高层(porcelain)命令。</p><p>通常情况下，不会在命令行中直接使用这些底层命令，它们更多被用于构建新的命令或用于自定义的脚本。</p><h2 id="git目录"><a href="#git目录" class="headerlink" title=".git目录"></a>.git目录</h2><p>在执行完<code>git init</code>命令后，会生成一个<code>.git</code>目录。该目录里面包含了几乎所有的git存储和操作的对象。如果你想备份或克隆一个你的repo，只需要将copy该目录即可。</p><p>一个已经有提交记录的.git目录内容如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost .git]# tree -F .</span><br><span class="line">.</span><br><span class="line">├── branches/</span><br><span class="line">├── config                    # 包含所有特有(project-specific)的配置项</span><br><span class="line">├── description               # 该文件仅用于GitWeb程序，无需关注</span><br><span class="line">├── HEAD                      # imp</span><br><span class="line">├── hooks/                    # 保存服务端和客户端的git钩子脚本</span><br><span class="line">├── index                     # imp</span><br><span class="line">├── info/                     # 该目录下的exclude文件用于保存不希望配置在.gitignore文件中的忽略模式</span><br><span class="line">│   └── exclude</span><br><span class="line">├── logs/</span><br><span class="line">│   ├── HEAD</span><br><span class="line">│   └── refs/</span><br><span class="line">│       ├── heads/</span><br><span class="line">│       │   └── master</span><br><span class="line">│       └── remotes/</span><br><span class="line">│           └── origin/</span><br><span class="line">│               └── HEAD</span><br><span class="line">├── objects/                        # imp, 存储所有的数据内容，包括所有文件的历史版本和commit信息</span><br><span class="line">│   ├── info/</span><br><span class="line">│   └── pack/</span><br><span class="line">│       ├── pack-de504965c4952729b475b8075c814b171ef83bf8.idx</span><br><span class="line">│       └── pack-de504965c4952729b475b8075c814b171ef83bf8.pack</span><br><span class="line">├── packed-refs</span><br><span class="line">└── refs/                           # imp</span><br><span class="line">    ├── heads/</span><br><span class="line">    │   └── master</span><br><span class="line">    ├── remotes/</span><br><span class="line">    │   └── origin/</span><br><span class="line">    │       └── HEAD</span><br><span class="line">    └── tags/</span><br><span class="line"></span><br><span class="line">16 directories, 24 files</span><br></pre></td></tr></table></figure><p>文件HEAD、index和目录objects、refs是git系统的核心组成部分。</p><p>git初始化时的.git目录如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost .git]# tree -F .</span><br><span class="line">.</span><br><span class="line">├── branches/</span><br><span class="line">├── config</span><br><span class="line">├── description</span><br><span class="line">├── HEAD</span><br><span class="line">├── hooks/</span><br><span class="line">├── info/</span><br><span class="line">│   └── exclude</span><br><span class="line">├── objects/</span><br><span class="line">│   ├── info/</span><br><span class="line">│   └── pack/</span><br><span class="line">└── refs/</span><br><span class="line">    ├── heads/</span><br><span class="line">    └── tags/</span><br></pre></td></tr></table></figure><h2 id="git对象"><a href="#git对象" class="headerlink" title="git对象"></a>git对象</h2><h3 id="数据对象-blob-object"><a href="#数据对象-blob-object" class="headerlink" title="数据对象(blob object)"></a>数据对象(blob object)</h3><p>通过 <code>git hash-object</code> 将文件内容写入数据库，生成的就是数据对象，可以通过 <code>git cat-file -t</code> 查看对象类型</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个新文件，将文件内容写入数据库</span></span><br><span class="line">[root@localhost gitNewTest]# echo 'version 1' &gt; text.txt</span><br><span class="line">[root@localhost gitNewTest]# cat text.txt</span><br><span class="line">version 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将文件内容写入数据库，生成一个数据对象</span></span><br><span class="line">[root@localhost gitNewTest]# git hash-object -w text.txt</span><br><span class="line">83baae61804e65cc73a7201a7252750c76066a30</span><br><span class="line">[root@localhost gitNewTest]# find .git/objects -type f</span><br><span class="line">.git/objects/83/baae61804e65cc73a7201a7252750c76066a30</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改文件内容，将修改后的文件再次写入数据库，又会生成一个数据对象</span></span><br><span class="line">[root@localhost gitNewTest]# echo 'version 2' &gt; text.txt</span><br><span class="line">[root@localhost gitNewTest]# git hash-object -w text.txt</span><br><span class="line">1f7a7a472abf3dd9643fd615f6da379c4acb3e3a</span><br><span class="line">[root@localhost gitNewTest]# find .git/objects -type f</span><br><span class="line">.git/objects/83/baae61804e65cc73a7201a7252750c76066a30</span><br><span class="line">.git/objects/1f/7a7a472abf3dd9643fd615f6da379c4acb3e3a</span><br><span class="line">[root@localhost gitNewTest]# cat text.txt</span><br><span class="line">version 2</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将第一个版本的内容从数据库中读出再次写回文件</span></span><br><span class="line">[root@localhost gitNewTest]# git cat-file -p 83baae6 &gt; text.txt</span><br><span class="line">[root@localhost gitNewTest]# cat text.txt</span><br><span class="line">version 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看对象内容均为数据对象</span></span><br><span class="line">[root@localhost gitNewTest]# git cat-file -t 83baae6</span><br><span class="line">blob</span><br><span class="line">[root@localhost gitNewTest]# git cat-file -t 1f7a7a4</span><br><span class="line">blob</span><br></pre></td></tr></table></figure><p>使用上述方式，只能保存文件内容，不能保存文件名称。可以使用下面的树对象实现文件名保存。</p><h3 id="树对象-tree-object"><a href="#树对象-tree-object" class="headerlink" title="树对象(tree object)"></a>树对象(tree object)</h3><p>git以一种类似Unix文件系统的方式存储内容。所有内容均以树对象和数据对象的形式存储，树对象对应了Unix中的目录项，数据对象大致对应了inodes或文件内容。</p><p>一个树对象包含了一条或多条树对象记录(tree entry)，每条记录对应一个指向数据对象或子树对象的SHA-1指针，以及对应的模式、类型、文件名信息。</p><h3 id="提交对象-commit-object"><a href="#提交对象-commit-object" class="headerlink" title="提交对象(commit object)"></a>提交对象(commit object)</h3><h3 id="标签对象-tag-object"><a href="#标签对象-tag-object" class="headerlink" title="标签对象(tag object)"></a>标签对象(tag object)</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">ProGit</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TODO </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-diff命令</title>
      <link href="/2019/06/29/git/git-cmd-diff/"/>
      <url>/2019/06/29/git/git-cmd-diff/</url>
      
        <content type="html"><![CDATA[<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git diff [&lt;options&gt;] [--] [&lt;path&gt;..]           # 默认表示比较工作区与暂存区</span><br><span class="line">git diff [&lt;options&gt;] HEAD [--] [&lt;path&gt;..]      # 表示比较工作区与本地版本库最新版本</span><br><span class="line">git diff [&lt;options&gt;] commitid [--] [&lt;path&gt;..]  # 表示比较工作区与指定commit id版本</span><br><span class="line"></span><br><span class="line">git diff [&lt;options&gt;] --cached [--] [&lt;path&gt;..]           # 表示比较暂存区与本地库最新版本</span><br><span class="line">git diff [&lt;options&gt;] --cached commitid [--] [&lt;path&gt;..]  # 表示比较暂存区与指定commit id版本</span><br><span class="line"></span><br><span class="line">git diff [&lt;options&gt;] commitid commitid [--] [&lt;path&gt;..]  # 表示比较两次commitid之间的差异</span><br></pre></td></tr></table></figure><h3 id="命令参数选项"><a href="#命令参数选项" class="headerlink" title="命令参数选项"></a>命令参数选项</h3><ul><li><p>–raw: 显示原始的差异格式，如下:</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitTest]# git diff --cached --raw</span><br><span class="line">:000000 100644 0000000 31d115c A        addfile</span><br><span class="line">:100644 100644 389cecf 1f09c93 M        newfile2</span><br></pre></td></tr></table></figure></li><li><p>–stat: 显示差异统计结果，如下：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitTest]# git diff --cached --stat</span><br><span class="line">addfile  | 5 +++++</span><br><span class="line">newfile2 | 3 +--</span><br><span class="line">2 files changed, 6 insertions(+), 2 deletions(-)</span><br></pre></td></tr></table></figure></li><li><p>–shortstat: 只显示<code>--stat</code>的最后一行内容</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitTest]# git diff --cached --shortstat</span><br><span class="line">2 files changed, 6 insertions(+), 2 deletions(-)</span><br></pre></td></tr></table></figure></li><li><p>–numstat: 只显示增加和删除的行数统计</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitTest]# git diff --cached --numstat</span><br><span class="line">5       0       addfile</span><br><span class="line">1       2       newfile2</span><br></pre></td></tr></table></figure></li><li><p>–name-only: 只显示哪些文件有差异</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitTest]# git diff --cached --name-only</span><br><span class="line">addfile</span><br><span class="line">newfile2</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用git-diff打补丁"><a href="#使用git-diff打补丁" class="headerlink" title="使用git diff打补丁"></a>使用git diff打补丁</h3><p>将工作区与本地仓库的差异做成补丁<br>git diff &gt; patch_name</p><p>检验补丁是否能使用，如果没有任何输出表示可以顺利接受该补丁<br>git apply –check patch_name</p><p>在另外一个地方应用补丁<br>git apply patch_name</p><h3 id="命令回显说明"><a href="#命令回显说明" class="headerlink" title="命令回显说明"></a>命令回显说明</h3><p>git diff命令的回显采用的时GNU <code>diff</code>命令<code>合并格式</code>的变体</p><p>linux下通过<code>diff -u file_a file_b</code>来显示<code>diff</code>的<code>合并格式</code></p><h4 id="内容增删"><a href="#内容增删" class="headerlink" title="内容增删"></a>内容增删</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&gt; git diff HEAD~1 HEAD</span><br><span class="line"></span><br><span class="line">diff --git a/README.md b/README.md  # 表示显示内容为git格式的diff</span><br><span class="line">index ae50fdb..54e2aab 100644       # ae50fab..54e2aab表示两个版本对象的哈希值</span><br><span class="line">                                    # 100644表示对象的模式(普通文件， 644权限)</span><br><span class="line">--- a/README.md         # --- 表示变动前的版本</span><br><span class="line">+++ b/README.md         # +++ 表示变动后的版本</span><br><span class="line">@@ -5,6 +5,7 @@         # 该行表示变动的位置，由两个@表示开头和结尾</span><br><span class="line">                        # - 表示 文件a/README.md， + 表示文件b/README.md</span><br><span class="line">                        # 5,6 表示下方显示内容为a/README.md的第5行开始，连续6行</span><br><span class="line">                        # 5,7 表示下方显示内容为b/README.md的第5行开始，连续7行</span><br><span class="line"> b</span><br><span class="line"> c</span><br><span class="line"> d</span><br><span class="line">+new line</span><br><span class="line"> e</span><br><span class="line"> f</span><br><span class="line"> g</span><br><span class="line">diff --git a/newfile b/newfile</span><br><span class="line">index fd54aa0..2d3a259 100644</span><br><span class="line">--- a/newfile</span><br><span class="line">+++ b/newfile</span><br><span class="line">@@ -1,5 +1,7 @@</span><br><span class="line"> add new file</span><br><span class="line"> 1</span><br><span class="line">-2</span><br><span class="line">-3</span><br><span class="line">+</span><br><span class="line">+ds</span><br><span class="line">+honda</span><br><span class="line">+toyta</span><br></pre></td></tr></table></figure><h4 id="新增文件"><a href="#新增文件" class="headerlink" title="新增文件"></a>新增文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/newfile3 b/newfile3</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..d4afdcc</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/newfile3</span><br><span class="line">@@ -0,0 +1,5 @@</span><br><span class="line">+add new file3</span><br><span class="line">+</span><br><span class="line">+new file</span><br><span class="line">+</span><br><span class="line">+new file end</span><br></pre></td></tr></table></figure><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/newfile b/newfile</span><br><span class="line">deleted file mode 100644</span><br><span class="line">index 2d3a259..0000000</span><br><span class="line">--- a/newfile</span><br><span class="line">+++ /dev/null</span><br><span class="line">@@ -1,7 +0,0 @@</span><br><span class="line">-add new file</span><br><span class="line">-1</span><br><span class="line">-</span><br><span class="line">-ds</span><br><span class="line">-honda</span><br><span class="line">-toyta</span><br><span class="line">-</span><br></pre></td></tr></table></figure><h4 id="重命名文件"><a href="#重命名文件" class="headerlink" title="重命名文件"></a>重命名文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/deletefile b/newfile2</span><br><span class="line">similarity index 89%</span><br><span class="line">rename from deletefile</span><br><span class="line">rename to newfile2</span><br><span class="line">index 08cb754..389cecf 100644</span><br><span class="line">--- a/deletefile</span><br><span class="line">+++ b/newfile2</span><br><span class="line">@@ -1,8 +1,6 @@</span><br><span class="line"> file tobe rename</span><br><span class="line"> 1</span><br><span class="line"> 2</span><br><span class="line">-3</span><br><span class="line">-4</span><br><span class="line"> 5</span><br><span class="line"> 6</span><br><span class="line"> 7</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用总结</title>
      <link href="/2019/06/29/git/git-usage/"/>
      <url>/2019/06/29/git/git-usage/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/git/git" target="_blank" rel="noopener">github</a><br><a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">ProGit</a></p><h2 id="常用术语"><a href="#常用术语" class="headerlink" title="常用术语"></a>常用术语</h2><ul><li>VCS: Version Control System 版本控制系统</li><li>DVCS: Distributed Version Control System 分布式版本控制系统</li><li>CVCS: Centralized Version Control System 中心式版本控制系统</li></ul><h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel asciidoc xmlto docbook2x</span><br><span class="line"></span><br><span class="line">atp-get install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev asciidoc xmlto docbook2x</span><br></pre></td></tr></table></figure><p>编码编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/git/git/archive/v2.22.0.tar.gz</span><br><span class="line">tar xvf v2.22.0.tar.gz</span><br><span class="line">cd git-2.22.0</span><br><span class="line">make configure</span><br><span class="line">./configure --prefix=/usr</span><br><span class="line">make all doc info</span><br><span class="line">make install install-doc install-html install-info</span><br></pre></td></tr></table></figure><h2 id="Git内部原理"><a href="#Git内部原理" class="headerlink" title="Git内部原理"></a><a href="/2019/06/30/git/git-internals">Git内部原理</a></h2><h2 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h2><h3 id="高层命令"><a href="#高层命令" class="headerlink" title="高层命令"></a>高层命令</h3><h4 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a><a href="/2019/06/29/git/git-cmd-diff">git diff</a></h4><h4 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a><a href="/2019/07/16/git/git-cmd-commit">git commit</a></h4><h4 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a><a href="/2019/07/22/git/git-cmd-log">git log</a></h4><h3 id="底层命令"><a href="#底层命令" class="headerlink" title="底层命令"></a>底层命令</h3><p>git最核心部分是一个key-value的数据库。</p><h4 id="hash-object命令"><a href="#hash-object命令" class="headerlink" title="hash-object命令"></a><a href="/2019/07/07/git/git-cmd-hash-object">hash-object命令</a></h4><h4 id="cat-object命令"><a href="#cat-object命令" class="headerlink" title="cat-object命令"></a><a href="/2019/07/07/git/git-cmd-cat-file">cat-object命令</a></h4><h4 id="update-index命令"><a href="#update-index命令" class="headerlink" title="update-index命令"></a><a href="/2019/07/07/git/git-cmd-update-index">update-index命令</a></h4><h4 id="ls-files命令"><a href="#ls-files命令" class="headerlink" title="ls-files命令"></a><a href="/2019/07/08/git/git-cmd-ls-files">ls-files命令</a></h4>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>groovy闭包</title>
      <link href="/2019/06/13/groovy/groovy-closure/"/>
      <url>/2019/06/13/groovy/groovy-closure/</url>
      
        <content type="html"><![CDATA[<h2 id="闭包定义"><a href="#闭包定义" class="headerlink" title="闭包定义"></a>闭包定义</h2><p>在计算机科学中，闭包（英语：Closure），又称词法闭包（Lexical Closure）或函数闭包（function closures），是引用了自由变量的函数。这个被引用的自由变量将和这个函数一同存在，即使已经离开了创造它的环境也不例外。所以，有另一种说法认为闭包是由函数和与其相关的引用环境组合而成的实体。闭包在运行时可以有多个实例，不同的引用环境和相同的函数组合可以产生不同的实例。</p><p>彼得·兰丁在1964年将术语“闭包”定义为一种包含环境成分和控制成分的实体。用来指代某些其开放绑定（自由变量）已经由其语法环境完成闭合（或者绑定）的lambda表达式，从而形成了闭合的表达式，或称闭包。</p><p>闭包只是在形式和表现上像函数，但实际上不是函数。函数是一些可执行的代码，这些代码在函数被定义后就确定了，不会在执行时发生变化，所以一个函数只有一个实例。闭包在运行时可以有多个实例，不同的引用环境和相同的函数组合可以产生不同的实例。所谓引用环境是指在程序执行中的某个点所有处于活跃状态的约束所组成的集合。其中的约束是指一个变量的名字和其所代表的对象之间的联系。</p><p>在函数定义时捕获当时的引用环境，并与函数代码组合成一个整体。当把这个整体当作函数调用时，先把其中的引用环境覆盖到当前的引用环境上，然后执行具体代码，并在调用结束后恢复原来的引用环境。这样就保证了函数定义和执行时的引用环境是相同的。这种由引用环境与函数代码组成的实体就是闭包。</p><p>自由变量是指除局部变量以外的变量。</p><h2 id="Groovy闭包定义"><a href="#Groovy闭包定义" class="headerlink" title="Groovy闭包定义"></a>Groovy闭包定义</h2><p>Groovy中的闭包是一个开放的、匿名代码块，它可以接收参数，定义返回值，也可以将闭包复制给变量，闭包还可以引用定义在其周围范围(in its surrounding scope)中的变量。与闭包的正式定义相反，Groovy语言中的闭包还可以包含定义在其周围范围之外(outside of its surrounding scope)的自由变量。</p><h2 id="Groovy闭包语法"><a href="#Groovy闭包语法" class="headerlink" title="Groovy闭包语法"></a>Groovy闭包语法</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123; [closureParameters -&gt;] statements&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// examples</span></span><br><span class="line">&#123; item++ &#125; <span class="comment">// 引用变量item</span></span><br><span class="line"><span class="comment">// 默认参数it</span></span><br><span class="line"><span class="comment">// 如果闭包执行时未指定参数，则it为null，类型class org.codehaus.groovy.runtime.NullObject</span></span><br><span class="line">&#123; println it&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示指定参数</span></span><br><span class="line">&#123;name -&gt; println name&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定多个具有类型的参数</span></span><br><span class="line"><span class="keyword">def</span> body = &#123;String name, <span class="keyword">int</span> age -&gt; println <span class="string">"name: $&#123;name&#125;, age:$&#123;age&#125;"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//闭包是groovy.lang.Closure类型的实例</span></span><br><span class="line"><span class="keyword">assert</span> body <span class="keyword">instanceof</span> Closure</span><br><span class="line"></span><br><span class="line"><span class="comment">//参数可以指定默认值</span></span><br><span class="line"><span class="keyword">def</span> sum = &#123; <span class="keyword">int</span> a, <span class="keyword">int</span> b=<span class="number">2</span> -&gt; a+b &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以指定闭包的返回值类型</span></span><br><span class="line">Closure&lt;Boolean&gt; isTextFile = &#123; File it -&gt;</span><br><span class="line">  it.name.endsWith(<span class="string">'.txt'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果要明确指定闭包不包含参数，需要显示的指定空参数列表</span></span><br><span class="line"><span class="keyword">def</span> magicNumber = &#123; -&gt; <span class="number">42</span> &#125;</span><br><span class="line"><span class="comment">// this call will fail because the closure doesn't accept any argument</span></span><br><span class="line">magicNumber(<span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//闭包的可以指定最后一个参数的长度是可变的或定义为数组</span></span><br><span class="line"><span class="keyword">def</span> concat1 = &#123;String... args -&gt; args.join(<span class="string">''</span>)&#125;</span><br><span class="line"><span class="keyword">assert</span> concat1(<span class="string">'abc'</span>, <span class="string">'def'</span>) == <span class="string">'abcdef'</span></span><br><span class="line"><span class="keyword">def</span> concat2 = &#123;String[] args -&gt; args.join(<span class="string">''</span>)&#125;</span><br><span class="line"><span class="keyword">assert</span> concat2(<span class="string">'aaa'</span>, <span class="string">'bbb'</span>) == <span class="string">'aaabbb'</span></span><br><span class="line"><span class="comment">//闭包的执行也可以使用call()</span></span><br><span class="line"><span class="keyword">def</span> multiConcat = &#123;<span class="keyword">int</span> n, String... args -&gt; args.join(<span class="string">''</span>)*n&#125;</span><br><span class="line"><span class="keyword">assert</span> multiConcat.call(<span class="number">3</span>, <span class="string">'ab'</span>, <span class="string">'cd'</span>) == <span class="string">'abcdabcdabcd'</span></span><br></pre></td></tr></table></figure><p>closureParameters是可选的逗号分隔的参数列表，参数可以指定类型(typed)也可不指定类型(untyped)。如果指定了参数，参数后面必须有 <code>-&gt;</code>，用于分割参数和闭包内语句。</p><p>闭包执行时，总是会有返回值。</p><h2 id="Groovy闭包委托策略-Delegation-strategy"><a href="#Groovy闭包委托策略-Delegation-strategy" class="headerlink" title="Groovy闭包委托策略(Delegation strategy)"></a>Groovy闭包委托策略(Delegation strategy)</h2><p>委托(Delegation)是Groovy闭包中的一个关键特性(key concept)，闭包委托策略的可修改使得在Groovy中设计漂亮的领域特定语言(dsl, domain specific language)成为可能。</p><h3 id="this、owner、delegate"><a href="#this、owner、delegate" class="headerlink" title="this、owner、delegate"></a>this、owner、delegate</h3><p>闭包内有三个内置对象:</p><ul><li>this      对应于定义闭包的封闭类(the enclosing class where the closure is defined),可以在闭包内通过getThisObject()获取</li><li>owner     对应于定义闭包的封闭对象(the enclosing object where the closure is defined)，可以是类也可以是闭包，可以在闭包内通过getOwner()获取</li><li>delegate  对应于一个第三方对象(where methods calls or properties are resolved whenever the receiver of the message is not defined)，可以在闭包内通过(getDelegate())获取</li></ul><blockquote><p>通过这三个内置对象，闭包可以调用对应对象的属性和方法。</p></blockquote><h4 id="this"><a href="#this" class="headerlink" title="this"></a>this</h4><h5 id="对应于定义闭包的封闭类"><a href="#对应于定义闭包的封闭类" class="headerlink" title="对应于定义闭包的封闭类"></a>对应于定义闭包的封闭类</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在TestThis类中定义闭包body，并返回闭包的this对象</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestThis</span>&#123;</span></span><br><span class="line">  <span class="keyword">void</span> run() &#123;</span><br><span class="line">    <span class="keyword">def</span> body = &#123;getThisObject()&#125;</span><br><span class="line">    <span class="comment">// 调用闭包会返回TestThis类的实例</span></span><br><span class="line">    <span class="keyword">assert</span> body() == <span class="keyword">this</span></span><br><span class="line">    <span class="comment">// 在闭包中直接使用this对象与调用getThisObject等价</span></span><br><span class="line">    <span class="keyword">def</span> body2 = &#123; <span class="keyword">this</span> &#125;</span><br><span class="line">    <span class="keyword">assert</span> body2 == <span class="keyword">this</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">def</span> body = &#123; <span class="keyword">this</span> &#125;</span><br><span class="line">        println body() == <span class="keyword">this</span>  <span class="comment">// true</span></span><br><span class="line">        println <span class="keyword">this</span>  <span class="comment">// class ClosureTest</span></span><br><span class="line">        println(<span class="keyword">this</span>.getClass().toString())   <span class="comment">// class java.lang.Class</span></span><br><span class="line">        println(body.getClass().toString())   <span class="comment">// class ClosureTest$_main_closure1</span></span><br><span class="line">        println body <span class="keyword">instanceof</span> Closure   <span class="comment">// true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="如果闭包在内部类中定义，那么闭包中的-this-对象返回的是内部类的实例对象"><a href="#如果闭包在内部类中定义，那么闭包中的-this-对象返回的是内部类的实例对象" class="headerlink" title="如果闭包在内部类中定义，那么闭包中的 this 对象返回的是内部类的实例对象"></a>如果闭包在内部类中定义，那么闭包中的 <code>this</code> 对象返回的是内部类的实例对象</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> &#123;</span></span><br><span class="line">        <span class="keyword">def</span> body = &#123; <span class="keyword">this</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> run()&#123;</span><br><span class="line">        InnerClass inner = <span class="keyword">new</span> InnerClass()</span><br><span class="line">        println inner == inner.body()   <span class="comment">// true</span></span><br><span class="line">        println <span class="keyword">this</span> == inner.body()    <span class="comment">// false</span></span><br><span class="line">        println <span class="keyword">this</span>.getClass().toString()        <span class="comment">// class ClosureTest</span></span><br><span class="line">        println inner.getClass().toString()       <span class="comment">// class ClosureTest$InnerClass</span></span><br><span class="line">        println inner.body.getClass().toString()  <span class="comment">// class ClosureTest$InnerClass$_closure1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="如果闭包A嵌入在类的某个闭包B中时，闭包A中的-this-表示的仍然是类的实例对象"><a href="#如果闭包A嵌入在类的某个闭包B中时，闭包A中的-this-表示的仍然是类的实例对象" class="headerlink" title="如果闭包A嵌入在类的某个闭包B中时，闭包A中的 this 表示的仍然是类的实例对象"></a>如果闭包A嵌入在类的某个闭包B中时，闭包A中的 <code>this</code> 表示的仍然是类的实例对象</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="keyword">void</span> run()&#123;</span><br><span class="line">        <span class="keyword">def</span> body_b = &#123;</span><br><span class="line">            <span class="keyword">def</span> body_a = &#123; <span class="keyword">this</span> &#125;</span><br><span class="line">            body_a()</span><br><span class="line">        &#125;</span><br><span class="line">        println body_b()                    <span class="comment">// ClosureTest@25748410</span></span><br><span class="line">        println <span class="keyword">this</span>                        <span class="comment">// ClosureTest@25748410</span></span><br><span class="line">        println body_b() == <span class="keyword">this</span>            <span class="comment">// true</span></span><br><span class="line">        println <span class="keyword">this</span>.getClass().toString()  <span class="comment">// class ClosureTest</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="owner"><a href="#owner" class="headerlink" title="owner"></a>owner</h4><p>返回闭包定义所在的封闭对象，可以是类也可以是闭包。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 普通类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="keyword">void</span> run()&#123;</span><br><span class="line">        <span class="keyword">def</span> body_b = &#123; owner &#125;</span><br><span class="line">        println body_b()    <span class="comment">// ClosureTest@55b5f5d2</span></span><br><span class="line">        println body_b      <span class="comment">// ClosureTest$_run_closure1@5bfa8cc5</span></span><br><span class="line">        println <span class="keyword">this</span>        <span class="comment">// ClosureTest@55b5f5d2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内部类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> &#123;</span></span><br><span class="line">        <span class="keyword">def</span> body = &#123; owner &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> run() &#123;</span><br><span class="line">        <span class="keyword">def</span> inner = <span class="keyword">new</span> InnerClass()</span><br><span class="line">        println inner         <span class="comment">// ClosureTest$InnerClass@553f1d75</span></span><br><span class="line">        println inner.body()  <span class="comment">// ClosureTest$InnerClass@553f1d75</span></span><br><span class="line">        println <span class="keyword">this</span>          <span class="comment">// ClosureTest@47404bea</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 嵌套闭包</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="keyword">void</span> run()&#123;</span><br><span class="line">        <span class="keyword">def</span> body_b = &#123;</span><br><span class="line">            <span class="keyword">def</span> body_a = &#123; owner &#125;</span><br><span class="line">            println body_a      <span class="comment">// ClosureTest$_run_closure1$_closure2@5bfa8cc5</span></span><br><span class="line">            println body_a()    <span class="comment">// ClosureTest$_run_closure1@16ecee1</span></span><br><span class="line">            body_a()</span><br><span class="line">        &#125;</span><br><span class="line">        println body_b()        <span class="comment">// ClosureTest$_run_closure1@16ecee1</span></span><br><span class="line">        println body_b          <span class="comment">// ClosureTest$_run_closure1@16ecee1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="delegate"><a href="#delegate" class="headerlink" title="delegate"></a>delegate</h4><p>委托是Groovy语言能够构建DSL的关键特性(It is a powerful concept for building domain specific languages in groovy)。<code>delegate</code>是一个用户自定义的对象。</p><h5 id="默认情况下，-delegate-等同于-owner"><a href="#默认情况下，-delegate-等同于-owner" class="headerlink" title="默认情况下， delegate 等同于 owner"></a>默认情况下， <code>delegate</code> 等同于 <code>owner</code></h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> &#123;</span></span><br><span class="line">        <span class="keyword">def</span> body = &#123; delegate &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> run() &#123;</span><br><span class="line">        <span class="keyword">def</span> inner = <span class="keyword">new</span> InnerClass()</span><br><span class="line">        println inner           <span class="comment">// ClosureTest$InnerClass@4f071df8</span></span><br><span class="line">        println inner.body()    <span class="comment">// ClosureTest$InnerClass@4f071df8</span></span><br><span class="line">        println <span class="keyword">this</span>            <span class="comment">// ClosureTest@29e6eb25</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> body_b = &#123;</span><br><span class="line">            <span class="keyword">def</span> body_a = &#123; delegate &#125;</span><br><span class="line">            body_a()</span><br><span class="line">        &#125;</span><br><span class="line">        println body_b()      <span class="comment">// ClosureTest$_run$_closure1@38be305c</span></span><br><span class="line">        println body_b        <span class="comment">// ClosureTest$_run$_closure1@38be305c</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> body_c = &#123; delegate &#125;</span><br><span class="line">        println body_c()      <span class="comment">// ClosureTest@29e6eb25</span></span><br><span class="line">        println body_c        <span class="comment">// ClosureTest$_run$_closure2@5ed731d0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="闭包中的delegate属性可以被修改为任何对象"><a href="#闭包中的delegate属性可以被修改为任何对象" class="headerlink" title="闭包中的delegate属性可以被修改为任何对象"></a>闭包中的<code>delegate</code>属性可以被修改为任何对象</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">        String name</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> &#123;</span></span><br><span class="line">        String name</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> run() &#123;</span><br><span class="line">        <span class="keyword">def</span> p = <span class="keyword">new</span> Person(<span class="string">name:</span> <span class="string">'john'</span>)</span><br><span class="line">        <span class="keyword">def</span> a = <span class="keyword">new</span> Animal(<span class="string">name:</span> <span class="string">'panda'</span>)</span><br><span class="line">        <span class="keyword">def</span> nameToUpper = &#123; delegate.name.toUpperCase() &#125;</span><br><span class="line">        nameToUpper.delegate = p</span><br><span class="line">        println nameToUpper()     <span class="comment">// JOHN</span></span><br><span class="line">        nameToUpper.delegate = a</span><br><span class="line">        println nameToUpper()     <span class="comment">// PANDA</span></span><br><span class="line">        println p.name    <span class="comment">// john</span></span><br><span class="line">        println a.name    <span class="comment">// panda</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// nameToUpper_use_var引用外部的局部变量p，能够达成和前面使用delegate一样的效果</span></span><br><span class="line">        <span class="comment">// 但是委托可以透明的使用，即在闭包中不再显式的采用 delegate. 前缀引用属性或方法，详情见下节委托策略</span></span><br><span class="line">        <span class="keyword">def</span> nameToUpper_use_var = &#123; p.name.toUpperCase() &#125;</span><br><span class="line">        println nameToUpper_use_var() <span class="comment">// JOHN</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="闭包委托策略"><a href="#闭包委托策略" class="headerlink" title="闭包委托策略"></a>闭包委托策略</h3><p>在闭包中，如果访问闭包内部未定义的属性或方法时，会涉及到委托策略，委托策略分为下面几种:</p><ul><li>Closure.OWNER_FIRST: 默认策略。优先在<code>owner</code>中查找，如果没有找到则在<code>delegate</code>中查找</li><li>Closure.DELEGATE_FIRST: 优先在<code>delegate</code>中查找, 如果没有找到则在<code>owner</code>中查找</li><li>Closure.OWNER_ONLY: 忽略<code>delegate</code>，只在<code>owner</code>中查找</li><li>Closure.DELEGATE_ONLY: 忽略<code>owner</code>, 只在<code>delegate</code>中查找</li><li>Closure.TO_SELF: 只有在实现自己的闭包子类时才有意义。在需要高级元编程(meta-programming)技术，希望实现自定义的解析策略: 属性或方法的解析既不使用<code>owner</code>也不使用<code>delegate</code>，only on the closure class itself.</li></ul><h4 id="DELEGATE-FIRST-与-OWNER-FIRST"><a href="#DELEGATE-FIRST-与-OWNER-FIRST" class="headerlink" title="DELEGATE_FIRST 与 OWNER_FIRST"></a>DELEGATE_FIRST 与 OWNER_FIRST</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">        String name</span><br><span class="line">        <span class="keyword">def</span> output = &#123; <span class="string">"My name is $&#123;name&#125;"</span> &#125;</span><br><span class="line">        String outputstring() &#123;</span><br><span class="line">            output()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> &#123;</span></span><br><span class="line">        String name</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> run() &#123;</span><br><span class="line">        <span class="keyword">def</span> p = <span class="keyword">new</span> Person(<span class="string">name:</span> <span class="string">'john'</span>)</span><br><span class="line">        <span class="keyword">def</span> a = <span class="keyword">new</span> Animal(<span class="string">name:</span> <span class="string">'panda'</span>)</span><br><span class="line">        println p.output.owner          <span class="comment">// ClosureTest$Person@3234f74a</span></span><br><span class="line">        println p.output.delegate       <span class="comment">// ClosureTest$Person@3234f74a</span></span><br><span class="line">        <span class="comment">// 默认委托策略为owner_first所以从p中查找name属性</span></span><br><span class="line">        println p.outputstring()        <span class="comment">// My name is john</span></span><br><span class="line">        p.output.delegate = a</span><br><span class="line">        println p.output.owner          <span class="comment">// ClosureTest$Person@3234f74a</span></span><br><span class="line">        println p.output.delegate       <span class="comment">// ClosureTest$Animal@65aa6596</span></span><br><span class="line">        <span class="comment">// 只修改了delegate属性，但策略没变，仍然从p中查找name属性</span></span><br><span class="line">        println p.outputstring()        <span class="comment">// My name is john</span></span><br><span class="line">        <span class="comment">// 修改委托策略为delegate_first</span></span><br><span class="line">        p.output.resolveStrategy = Closure.DELEGATE_FIRST</span><br><span class="line">        <span class="comment">// 从a中查找name属性</span></span><br><span class="line">        println p.outputstring()        <span class="comment">// My name is panda</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DELEGATE-FIRST-与-DELEGATE-OWNER"><a href="#DELEGATE-FIRST-与-DELEGATE-OWNER" class="headerlink" title="DELEGATE_FIRST 与 DELEGATE_OWNER"></a>DELEGATE_FIRST 与 DELEGATE_OWNER</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">        String name</span><br><span class="line">        <span class="keyword">int</span> age</span><br><span class="line">        <span class="keyword">def</span> output = &#123; <span class="string">"$&#123;name&#125; age is $&#123;age&#125;"</span> &#125;</span><br><span class="line">        String outputstring() &#123;</span><br><span class="line">            output()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> &#123;</span></span><br><span class="line">        String name</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> run() &#123;</span><br><span class="line">        <span class="keyword">def</span> p = <span class="keyword">new</span> Person(<span class="string">name:</span> <span class="string">'john'</span>, <span class="string">age:</span> <span class="number">18</span>)</span><br><span class="line">        <span class="keyword">def</span> a = <span class="keyword">new</span> Animal(<span class="string">name:</span> <span class="string">'panda'</span>)</span><br><span class="line">        println p.outputstring()    <span class="comment">// john age is 18</span></span><br><span class="line">        p.output.delegate = a</span><br><span class="line">        println p.outputstring()    <span class="comment">// john age is 18</span></span><br><span class="line">        p.output.resolveStrategy = Closure.DELEGATE_ONLY</span><br><span class="line">        p.output.delegate = p</span><br><span class="line">        println p.outputstring()    <span class="comment">// john age is 18</span></span><br><span class="line">        p.output.delegate = a</span><br><span class="line">        <span class="comment">// exception:</span></span><br><span class="line">        <span class="comment">// groovy.lang.MissingPropertyException: No such property: age for class: ClosureTest</span></span><br><span class="line">        println p.outputstring()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="闭包委托策略具有传递性"><a href="#闭包委托策略具有传递性" class="headerlink" title="闭包委托策略具有传递性"></a>闭包委托策略具有传递性</h4><p>闭包A内嵌与闭包B时，如果闭包A中的某个属性在闭包B中没有解析到会继续向闭包B的<code>owner</code>或<code>delegate</code>中查找。具体是向闭包的B的<code>owner</code>还是<code>delegate</code>中查找，由闭包B的委托策略决定</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">        String name</span><br><span class="line">        <span class="keyword">int</span> age</span><br><span class="line">        <span class="keyword">def</span> outerClosure = &#123;</span><br><span class="line">            <span class="comment">// outerClosure为innerClosure的owner</span></span><br><span class="line">            <span class="keyword">def</span> name = <span class="string">"outer_$&#123;name&#125;"</span></span><br><span class="line">            <span class="keyword">def</span> innerClosure = &#123;</span><br><span class="line">                <span class="comment">// innerClosure闭包中的name和age属性都不在闭包内定义</span></span><br><span class="line">                <span class="comment">// 默认从innerClosure.owner中查找</span></span><br><span class="line">                <span class="comment">// outerClousre.name</span></span><br><span class="line">                <span class="comment">// p.age</span></span><br><span class="line">                <span class="string">"$&#123;name&#125;'s age is $&#123;age&#125;"</span></span><br><span class="line">            &#125;</span><br><span class="line">            println innerClosure.owner       <span class="comment">// ClosureTest$Person$_closure1@26a4842b</span></span><br><span class="line">            println innerClosure.delegate == innerClosure.owner <span class="comment">// ture</span></span><br><span class="line">            innerClosure()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> run() &#123;</span><br><span class="line">        <span class="keyword">def</span> p = <span class="keyword">new</span> Person(<span class="string">name:</span> <span class="string">'john'</span>, <span class="string">age:</span> <span class="number">18</span>)</span><br><span class="line">        println p                               <span class="comment">// ClosureTest$Person@5ed731d0</span></span><br><span class="line">        <span class="comment">// p.outerClosure的owner为 p</span></span><br><span class="line">        println p.outerClosure                  <span class="comment">// ClosureTest$Person$_closure1@26a4842b</span></span><br><span class="line">        println p.outerClosure.delegate == p    <span class="comment">// true</span></span><br><span class="line">        println p.outerClosure.owner == p       <span class="comment">// true</span></span><br><span class="line">        println p.outerClosure()                <span class="comment">// outer_john's age is 18</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClosureTest</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">        String name</span><br><span class="line">        <span class="keyword">int</span> age</span><br><span class="line">        <span class="keyword">def</span> outerClosure = &#123;</span><br><span class="line">            <span class="keyword">def</span> name = <span class="string">"outer_$&#123;name&#125;"</span></span><br><span class="line">            <span class="keyword">def</span> innerClosure = &#123;</span><br><span class="line">                <span class="string">"$&#123;name&#125;'s age is $&#123;age&#125;"</span></span><br><span class="line">            &#125;</span><br><span class="line">            innerClosure()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> run() &#123;</span><br><span class="line">        <span class="keyword">def</span> p = <span class="keyword">new</span> Person(<span class="string">name:</span> <span class="string">'john'</span>, <span class="string">age:</span> <span class="number">18</span>)</span><br><span class="line">        <span class="keyword">def</span> p2 = <span class="keyword">new</span> Person(<span class="string">name:</span> <span class="string">'jessica'</span>, <span class="string">age:</span> <span class="number">3</span>)</span><br><span class="line">        println p.outerClosure()        <span class="comment">// outer_john's age is 18</span></span><br><span class="line">        p.outerClosure.resolveStrategy = Closure.DELEGATE_FIRST</span><br><span class="line">        p.outerClosure.delegate = p2</span><br><span class="line">        println p.outerClosure()        <span class="comment">// outer_jessica's age is 3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> main(String... args) &#123;</span><br><span class="line">        <span class="keyword">new</span> ClosureTest().run()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="闭包策略在Jenkins-pipeline中的典型应用"><a href="#闭包策略在Jenkins-pipeline中的典型应用" class="headerlink" title="闭包策略在Jenkins pipeline中的典型应用"></a>闭包策略在Jenkins pipeline中的典型应用</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vars/abc.groovy</span></span><br><span class="line"><span class="keyword">def</span> call(body) &#123;</span><br><span class="line">    <span class="keyword">def</span> config = [:]</span><br><span class="line">    <span class="comment">// 修改body闭包的委托策略和delegate属性</span></span><br><span class="line">    body.resolveStrategy = Closure.DELEGATE_FIRST</span><br><span class="line">    body.delegate = config</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 闭包执行时，闭包中读取未定义的属性时都会从config中获取</span></span><br><span class="line">    <span class="comment">// 闭包中设置未定义的属性时都也会设置到config中</span></span><br><span class="line">    body()</span><br><span class="line">    <span class="comment">// 后续就可以通过config.branch访问Jenkinsfile中定义并传给abc.groovy的值</span></span><br><span class="line">    println config  <span class="comment">// [branch: 'master']</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Jenkinsfile</span></span><br><span class="line">abc &#123;</span><br><span class="line">    <span class="comment">// 通常设置某些属性值，可以实现传参效果</span></span><br><span class="line">    branch = <span class="string">'master'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zh.wikipedia.org/wiki/Groovy" target="_blank" rel="noopener">维基百科-闭包</a></p><p><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-closure/" target="_blank" rel="noopener">闭包的概念、形式与应用 (IBM DeveloperWorks)</a></p><p><a href="http://groovy-lang.org/closures.html" target="_blank" rel="noopener">Groovy-Closure</a></p>]]></content>
      
      
      <categories>
          
          <category> language </category>
          
          <category> groovy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> groovy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>groovy使用总结</title>
      <link href="/2019/06/13/groovy/groovy-usage/"/>
      <url>/2019/06/13/groovy/groovy-usage/</url>
      
        <content type="html"><![CDATA[<p>Apache Groovy基于Java平台的一种功能强大、可选类型的动态语言。它的目的在于通过简洁、熟悉和易于学习的语法来提升开发人员的效率。Groovy代码动态地编译成运行于Java虚拟机（JVM）上的Java字节码，并可以与其他Java代码和库进行互操作。由于其运行在JVM上的特性，Groovy可以使用其他Java语言编写的库。</p><p><a href="http://groovy-lang.org/documentation.html" target="_blank" rel="noopener">官网文档</a></p><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a><a href="/2019/06/13/groovy/groovy-closure">闭包</a></h2><h2 id="grape依赖管理"><a href="#grape依赖管理" class="headerlink" title="grape依赖管理"></a><a href="/2019/07/16/groovy/jenkins-groovy-grape">grape依赖管理</a></h2>]]></content>
      
      
      <categories>
          
          <category> language </category>
          
          <category> groovy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> groovy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>etcd_introduce</title>
      <link href="/2019/06/02/etcd/etcd-introduce/"/>
      <url>/2019/06/02/etcd/etcd-introduce/</url>
      
        <content type="html"><![CDATA[<p><a href="https://etcd.io/" target="_blank" rel="noopener">官网</a><br><a href="https://github.com/etcd-io/etcd" target="_blank" rel="noopener">github</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>etcd官方定义为一个分布式的可信的键值存储服务，用于存储分布式系统中的一些关键数据。其主要特性包括:</p><ol><li>Simple 简单: 包含一套定义良好、面向用户的API(gRpc)</li><li>Secure 安全: 支持可选择客户端证书认证的TLS</li><li>Fast 快速: 基准测试可达10,000写每秒</li><li>Reliable 可靠: properly distributed using Raft</li></ol><p>etcd是使用Go语言编写，采用Raft共识算法管理高可用的replicated log。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>最简单的方式是在<a href="https://github.com/etcd-io/etcd/releases/" target="_blank" rel="noopener">github的release中</a>下载预编译(pre-built)好的二进制</li><li>源码安装<br>a) etcd源码安装时对go版本通常都有要求，请参照github中说明<br>b) 为了确保etcd编译正确，etcd提供了官方release版本的依赖。当然是否使用官方提供的依赖是可选的。</li></ol><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="预置条件"><a href="#预置条件" class="headerlink" title="预置条件"></a>预置条件</h3>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> etcd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> etcd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAVEN POM</title>
      <link href="/2019/06/01/maven/maven-pom/"/>
      <url>/2019/06/01/maven/maven-pom/</url>
      
        <content type="html"><![CDATA[<p>Maven的超级POM(Project Object Model)位于${M2_HOME}/lib/maven-model-builder-xxx.jar构件中org.apache.maven.model.pom-4.0.0.xml<br>其中包含了Maven用于构建项目有关的项目信息以及配置细节，它包含了大多数项目的默认值。<br>超级POM是Maven的默认POM，除非显式设置(POM中的&lt;parent>配置)，否则所有的POM都会扩展超级POM，也就是说项目POM默认都会继承超级POM中的配置。</p><h3 id="POM最小内容"><a href="#POM最小内容" class="headerlink" title="POM最小内容"></a>POM最小内容</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mycompany.app<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>modelVersion内容要设置为4.0.0。<br>groupId、artifactId和version三个元素定义了项目的坐标。</p><p>### </p><h3 id="Super-POM-3-6-1-内容"><a href="#Super-POM-3-6-1-内容" class="headerlink" title="Super POM(3.6.1)内容"></a>Super POM(3.6.1)内容</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- START SNIPPET: superpom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Maven Repository Switchboard<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo1.maven.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Maven Plugin Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo1.maven.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>never<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;/target<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/classes<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;-$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">testOutputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/test-classes<span class="tag">&lt;/<span class="name">testOutputDirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sourceDirectory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/java<span class="tag">&lt;/<span class="name">sourceDirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scriptSourceDirectory</span>&gt;</span>src/main/scripts<span class="tag">&lt;/<span class="name">scriptSourceDirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">testSourceDirectory</span>&gt;</span>$&#123;project.basedir&#125;/src/test/java<span class="tag">&lt;/<span class="name">testSourceDirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">testResources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">testResource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;/src/test/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- <span class="doctag">NOTE:</span> These plugins will be removed from future versions of the super POM --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- They are kept for the moment as they are very unlikely to conflict with lifecycle mappings (MNG-4453) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-antrun-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2-beta-5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-release-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reporting</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/site<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">reporting</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- <span class="doctag">NOTE:</span> The release profile will be removed from future versions of the super POM --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>release-profile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">name</span>&gt;</span>performRelease<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">inherited</span>&gt;</span>true<span class="tag">&lt;/<span class="name">inherited</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">inherited</span>&gt;</span>true<span class="tag">&lt;/<span class="name">inherited</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-javadocs<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">inherited</span>&gt;</span>true<span class="tag">&lt;/<span class="name">inherited</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">updateReleaseInfo</span>&gt;</span>true<span class="tag">&lt;/<span class="name">updateReleaseInfo</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- END SNIPPET: superpom --&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> 构建工具 </category>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pipeline并行任务配置</title>
      <link href="/2019/05/30/jenkins/jenkins-pipeline-parallel/"/>
      <url>/2019/05/30/jenkins/jenkins-pipeline-parallel/</url>
      
        <content type="html"><![CDATA[<h2 id="静态并行任务配置"><a href="#静态并行任务配置" class="headerlink" title="静态并行任务配置"></a>静态并行任务配置</h2><h3 id="声明式"><a href="#声明式" class="headerlink" title="声明式"></a>声明式</h3><ol><li>在<code>stage</code>中可以通过<code>parallel</code>块来嵌套多个<code>stage</code>实现并行运行</li><li><code>parallel</code>块中的<code>stage</code>除了不能再次嵌套<code>parallel</code>外和普通<code>stage</code>一样，也可以通过<code>stages</code>包含一些列顺序执行的<code>stage</code></li><li>每个<code>stage</code>中有且只能有一个<code>steps</code>、<code>stages</code>或者<code>parallel</code></li><li>所有包含<code>parallel</code>的<code>stage</code>都不能包含<code>agent</code>和<code>tools</code></li></ol><h4 id="EXAMPLE-1-stage级别并行"><a href="#EXAMPLE-1-stage级别并行" class="headerlink" title="EXAMPLE-1 stage级别并行"></a>EXAMPLE-1 stage级别并行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    options &#123;</span><br><span class="line">        timestamps()</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&apos;init&apos;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &quot;init start&quot;</span><br><span class="line">                sleep 5</span><br><span class="line">                echo &apos;init end&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&apos;build&apos;) &#123;</span><br><span class="line">            parallel &#123;</span><br><span class="line">                stage(&apos;x86 build&apos;) &#123;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        echo &apos;x86 build start&apos;</span><br><span class="line">                        sleep 5</span><br><span class="line">                        echo &apos;x86 build end&apos;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                stage(&apos;arm build&apos;) &#123;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        echo &apos;arm build start&apos;</span><br><span class="line">                        sleep 3</span><br><span class="line">                        echo &apos;arm build end&apos;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>blueOcean如下图所示<br><img src="/img/jenkins_example_1.bmp" alt="example_1"></p><h4 id="EXAMPLE-2-并行stage中多个stage串行"><a href="#EXAMPLE-2-并行stage中多个stage串行" class="headerlink" title="EXAMPLE-2 并行stage中多个stage串行"></a>EXAMPLE-2 并行stage中多个stage串行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    options &#123;</span><br><span class="line">        timestamps()</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&apos;init&apos;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &quot;init start&quot;</span><br><span class="line">                sleep 5</span><br><span class="line">                echo &apos;init end&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&apos;build&apos;) &#123;</span><br><span class="line">            parallel &#123;</span><br><span class="line">                stage(&apos;x86 build&apos;) &#123;</span><br><span class="line">                    agent &#123;</span><br><span class="line">                        label &apos;master&apos;</span><br><span class="line">                    &#125;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        echo &apos;x86 build start&apos;</span><br><span class="line">                        sleep 5</span><br><span class="line">                        echo &apos;x86 build end&apos;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                stage(&apos;arm build&apos;) &#123;</span><br><span class="line">                    stages &#123;</span><br><span class="line">                        stage(&apos;arm-master build&apos;) &#123;</span><br><span class="line">                            steps &#123;</span><br><span class="line">                                echo &apos;arm master build start&apos;</span><br><span class="line">                                sleep 3</span><br><span class="line">                                echo &apos;arm master build end&apos;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        stage(&apos;arm develop build&apos;) &#123;</span><br><span class="line">                            steps &#123;</span><br><span class="line">                                echo &apos;arm develop build start&apos;</span><br><span class="line">                                sleep 3</span><br><span class="line">                                echo &apos;arm develop build end&apos;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>blueOcean如下图所示<br><img src="/img/jenkins_example_2.bmp" alt="example_2"></p><h4 id="EXAMPLE-4-step级别并行"><a href="#EXAMPLE-4-step级别并行" class="headerlink" title="EXAMPLE-4 step级别并行"></a>EXAMPLE-4 step级别并行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    options &#123;</span><br><span class="line">        timestamps()</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&apos;init&apos;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &quot;init start&quot;</span><br><span class="line">                sleep 5</span><br><span class="line">                echo &apos;init end&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&apos;build&apos;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                parallel &apos;x86 build&apos;: &#123;</span><br><span class="line">                    echo &apos;x86 build start&apos;</span><br><span class="line">                    sleep 3</span><br><span class="line">                    echo &apos;x86 build end&apos;</span><br><span class="line">                &#125;, &apos;arm build&apos;: &#123;</span><br><span class="line">                    echo &apos;arm build start&apos;</span><br><span class="line">                    sleep 3</span><br><span class="line">                    echo &apos;arm build end&apos;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>blueOcean如下图所示<br><img src="/img/jenkins_example_4.png" alt="example_4"></p><h3 id="脚本式"><a href="#脚本式" class="headerlink" title="脚本式"></a>脚本式</h3><h4 id="EXAMPLE-3"><a href="#EXAMPLE-3" class="headerlink" title="EXAMPLE-3"></a>EXAMPLE-3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">script &#123;</span><br><span class="line">    node(&apos;master&apos;) &#123;</span><br><span class="line">        stage(&apos;init&apos;) &#123;</span><br><span class="line">            echo &apos;init&apos;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&apos;build&apos;) &#123;</span><br><span class="line">            parallel &apos;build x86&apos;: &#123;</span><br><span class="line">                stage(&apos;build x86 step1&apos;) &#123;</span><br><span class="line">                    echo &apos;build x86 step1 start&apos;</span><br><span class="line">                    sleep 5</span><br><span class="line">                    echo &apos;build x86 step1 end&apos;</span><br><span class="line">                &#125;</span><br><span class="line">                stage(&apos;build x86 step2&apos;) &#123;</span><br><span class="line">                    echo &apos;build x86 step 2 start&apos;</span><br><span class="line">                    sleep 5</span><br><span class="line">                    echo &apos;build x86 step 2 end&apos;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &apos;build arm&apos;: &#123;</span><br><span class="line">                echo &apos;build arm start&apos;</span><br><span class="line">                sleep 6</span><br><span class="line">                echo &apos;build arm end&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>blueOcean如下图所示<br><img src="/img/jenkins_example_3.png" alt="example_3"></p><h2 id="动态创建并行任务"><a href="#动态创建并行任务" class="headerlink" title="动态创建并行任务"></a>动态创建并行任务</h2><h3 id="EXAMPLE-5"><a href="#EXAMPLE-5" class="headerlink" title="EXAMPLE-5"></a>EXAMPLE-5</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">def jobs = [&apos;jobA&apos;, &apos;jobB&apos;, &apos;jobC&apos;]</span><br><span class="line"></span><br><span class="line">def parallelStagesMap = jobs.collectEntries &#123; def jobName -&gt;</span><br><span class="line">    [&quot;$&#123;jobName&#125;&quot;, generateJobStage(jobName)]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def generateJobStage(String jobName) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        node(&apos;master&apos;) &#123;</span><br><span class="line">            stage(&quot;stage: $&#123;jobName&#125;&quot;) &#123;</span><br><span class="line">                echo &quot;$&#123;jobName&#125; start&quot;</span><br><span class="line">                sleep 5</span><br><span class="line">                echo &quot;job end&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    options &#123;</span><br><span class="line">        timestamps()</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&apos;non-parallel stage&apos;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &apos;this is non-parallel stage&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&apos;parallel stage&apos;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    parallel parallelStagesMap</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> 持续集成 </category>
          
          <category> jenkins </category>
          
          <category> pipeline </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> pipeline </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven 使用总结</title>
      <link href="/2019/05/23/maven/maven-usage/"/>
      <url>/2019/05/23/maven/maven-usage/</url>
      
        <content type="html"><![CDATA[<p><a href="http://maven.apache.org/index.html" target="_blank" rel="noopener">maven官方文档</a><br><a href="https://www.yiibai.com/maven/" target="_blank" rel="noopener">易百教程</a><br><a href="https://mvnrepository.com/" target="_blank" rel="noopener">maven库查询</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">二进制包</a>后解压即可，然后配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export M2_HOME=/usr/local/apache_maven_xxx'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$M2_HOME/bin:$PATH'</span> &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure><p>执行<code>mvn -v</code>查看版本，同时确认是否安装配置OK</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="超级POM"><a href="#超级POM" class="headerlink" title="超级POM"></a><a href="/2019/06/01/maven/maven-pom/">超级POM</a></h3><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>maven的配置文件有三个级别</p><ol><li>项目级，位于项目workspace目录下的pom.xml</li><li>用户级，位于~/.m2/settings.xml，通过<code>mvn -s /path/to/settings.xml</code>可以覆盖用户级配置文件</li><li>全局级，位于${M2_HOME}/conf/settings.xml，通过<code>mvn -gs /path/to/settings.xml</code>可以覆盖全局配置文件</li></ol><h3 id="配置项目"><a href="#配置项目" class="headerlink" title="配置项目"></a>配置项目</h3><table><thead><tr><th>标签</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>localRepository</td><td>String</td><td>本地仓库路径，默认位于<code>~/.m2/repository</code></td></tr><tr><td>mirrors</td><td>List&lt;mirror></td><td>配置仓库的下载镜像</td></tr></tbody></table><p>mirrorOf配置</p><ol><li>* = everything</li><li>external:* = everything not on the localhost and not file based.</li><li>repo,repo1 = repo or repo1</li><li>*,!repo1 = everything except repo1</li></ol><h3 id="镜像设置"><a href="#镜像设置" class="headerlink" title="镜像设置"></a>镜像设置</h3><h4 id="阿里镜像"><a href="#阿里镜像" class="headerlink" title="阿里镜像"></a>阿里镜像</h4><p><a href="https://help.aliyun.com/document_detail/102512.html?spm=a2c40.aliyun_maven_repo.0.0.36183054c2VGCz" target="_blank" rel="noopener">公共代理库使用文档</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimavenpublic<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven public<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central,jcenter<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="华为镜像"><a href="#华为镜像" class="headerlink" title="华为镜像"></a><a href="https://mirrors.huaweicloud.com/" target="_blank" rel="noopener">华为镜像</a></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>huaweicloud<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://mirrors.huaweicloud.com/repository/maven/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Maven仓库"><a href="#Maven仓库" class="headerlink" title="Maven仓库"></a>Maven仓库</h2><p>对于Maven来说，仓库只有两类: 本地仓库和远程仓库。<br>当Maven根据坐标寻找构件时，首先查找本地仓库，如果本地仓库存在此构件，则直接使用；<br>如果本地仓库没有此构件，或需要查看构件是否有更新，Maven会去远程仓库查找，找到后下载到本地仓库再使用，如果没有找到则报错。</p><p>对于远程仓库，根据仓库的提供者又可以分为: 中央仓库、其他公开库和私服<br>中央仓库是Maven自带的远程仓库，它包含了绝大部分开源的构件。默认情况下，当本地仓库没有找到需要的构件时，Maven会尝试从中央仓库下载。</p><h2 id="Maven常用命令"><a href="#Maven常用命令" class="headerlink" title="Maven常用命令"></a>Maven常用命令</h2><h3 id="Help命令"><a href="#Help命令" class="headerlink" title="Help命令"></a>Help命令</h3><h4 id="查看某个插件的详情"><a href="#查看某个插件的详情" class="headerlink" title="查看某个插件的详情"></a>查看某个插件的详情</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="built_in">help</span>:describe -Dplugin=xxx -Ddetail</span><br></pre></td></tr></table></figure><p>plugin可以使用下面三种方式指定:</p><ul><li>插件前缀, 如 ‘help’</li><li>groupId:artifactId, 如 ‘org.apache.maven.plugins:maven-help-plugin’</li><li>groupId:artifactId:version, 如 ‘org.apache.maven.plugins:maven-help-plugin:2.0’</li></ul><h4 id="查看某个插件的指定命令的帮助"><a href="#查看某个插件的指定命令的帮助" class="headerlink" title="查看某个插件的指定命令的帮助"></a>查看某个插件的指定命令的帮助</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:<span class="built_in">help</span> -Ddetail -Dgoal=generate</span><br></pre></td></tr></table></figure><h3 id="使用archetype创建Maven项目"><a href="#使用archetype创建Maven项目" class="headerlink" title="使用archetype创建Maven项目"></a>使用archetype创建Maven项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate</span><br><span class="line">mvn -U archetype:generate -Dfilter=io.jenkins.archetypes:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> 构建工具 </category>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vm_network</title>
      <link href="/2019/05/16/vm-network/"/>
      <url>/2019/05/16/vm-network/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/yushupan/article/details/78404395" target="_blank" rel="noopener">TODO1</a><br><a href="https://blog.csdn.net/chichi123137/article/details/82670257" target="_blank" rel="noopener">TODO2</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>centos使用总结</title>
      <link href="/2019/05/15/centos/centos-usage/"/>
      <url>/2019/05/15/centos/centos-usage/</url>
      
        <content type="html"><![CDATA[<h2 id="最小化安装IP配置"><a href="#最小化安装IP配置" class="headerlink" title="最小化安装IP配置"></a>最小化安装IP配置</h2><p>修改 <code>/etc/sysconfig/network-scripts/ifcfg-xxx</code> 文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">BOOTPROTO</span>=static        #网卡引导方式 static/DHCP</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span>              #网卡开机启动</span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">192.168</span>.<span class="number">0.150</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">192.168</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">HWADDR</span>=xx:xx:xx:xx:xx:xx</span><br><span class="line"><span class="attr">DNS1</span>=x.x.x.x</span><br><span class="line"><span class="attr">DNS2</span>=x.x.x.x</span><br></pre></td></tr></table></figure><p>然后重启网络服务 <code>systemctl restart network</code></p><h2 id="配置国内镜像源"><a href="#配置国内镜像源" class="headerlink" title="配置国内镜像源"></a>配置国内镜像源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/centos-release</span><br><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h2 id="epel扩展源"><a href="#epel扩展源" class="headerlink" title="epel扩展源"></a><a href="/2019/06/30/centos/epel">epel扩展源</a></h2><h2 id="yum源优先级"><a href="#yum源优先级" class="headerlink" title="yum源优先级"></a><a href="/2019/06/30/centos/yum-priorities">yum源优先级</a></h2><h2 id="yum命令"><a href="#yum命令" class="headerlink" title="yum命令"></a>yum命令</h2><h3 id="搜索命令属于哪些包"><a href="#搜索命令属于哪些包" class="headerlink" title="搜索命令属于哪些包"></a>搜索命令属于哪些包</h3><ul><li><code>yum search xxx</code></li><li><code>yum provides xxx</code></li></ul><h3 id="yum-list"><a href="#yum-list" class="headerlink" title="yum list"></a>yum list</h3><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>yum list [all]</td><td>所有已安装和可以安装的包</td></tr><tr><td>yum list available</td><td>所有可以安装的包</td></tr><tr><td>yum list installed</td><td>所有已经安装的包</td></tr><tr><td>yum list updates</td><td>所有可以升级的包</td></tr><tr><td>yum list extra</td><td>所有已经安装但不在repository的包</td></tr></tbody></table><h3 id="查看软件包详情"><a href="#查看软件包详情" class="headerlink" title="查看软件包详情"></a>查看软件包详情</h3><p>  <code>yum info wget</code></p><h3 id="查看软件包依赖"><a href="#查看软件包依赖" class="headerlink" title="查看软件包依赖"></a>查看软件包依赖</h3><p>  <code>yum deplist wget</code></p><h2 id="工具安装与配置"><a href="#工具安装与配置" class="headerlink" title="工具安装与配置"></a>工具安装与配置</h2><h3 id="openjdk安装"><a href="#openjdk安装" class="headerlink" title="openjdk安装"></a>openjdk安装</h3><p>通过yum工具安装的位置为 <code>/usr/lib/jvm/java-xxx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install java-11-openjdk-devel.x86_64</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export JAVA_HOME=/usr/lib/jvm/java-11-openjdk"</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$JAVA_HOME/bin:$PATH'</span> &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>makefile使用总结</title>
      <link href="/2019/05/14/makefile-usage/"/>
      <url>/2019/05/14/makefile-usage/</url>
      
        <content type="html"><![CDATA[<h3 id="常用链接"><a href="#常用链接" class="headerlink" title="常用链接"></a>常用链接</h3><p><a href="https://github.com/seisman/how-to-write-makefile" target="_blank" rel="noopener">跟我一起写Makefile重制版</a><br><a href="http://www.gnu.org/software/make/manual/make.html" target="_blank" rel="noopener">GUN Make手册</a></p><h3 id="makefile中添加打印信息"><a href="#makefile中添加打印信息" class="headerlink" title="makefile中添加打印信息"></a>makefile中添加打印信息</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">warn_msg=<span class="string">"warning..."</span></span><br><span class="line"><span class="variable">$(info "infomation output")</span></span><br><span class="line"><span class="variable">$(<span class="built_in">warning</span> "warn: <span class="variable">$(warn_msg)</span>")</span></span><br><span class="line"><span class="variable">$(<span class="built_in">error</span> "<span class="built_in">error</span> message")</span></span><br></pre></td></tr></table></figure><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><ul><li><code>-n, --just-print</code> 打印make过程中执行的所有命令但是并不会真正执行</li><li><code>--print-data-base</code> make过程中会显示GNU信息、执行的命令以及make的内部数据库。数据库里面的数据分为以下几类<br>1) variables                  会列出每个变量及描述性注释<br>2) directories                列出了将会被make检查的目录<br>3) implicit rules             包含了所有内置和用户自定义的模式规则<br>4) pattern-specific variables 定义在makefile中的模式专属变量<br>5) files(explicit rules)      与特定文件有关的自定义和后缀规则<br>6) vpath search paths</li></ul>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> 构建工具 </category>
          
          <category> makefile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> make </tag>
            
            <tag> makefile </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lvm使用</title>
      <link href="/2019/05/13/lvm/"/>
      <url>/2019/05/13/lvm/</url>
      
        <content type="html"><![CDATA[<p>LVM(Logic Volume Manager)逻辑卷管理，它是linux环境下对磁盘分区进行管理的一种机制。</p><p><a href="https://www.cnblogs.com/zhaojiedi1992/p/zhaojiedi_linux_042_lvm.html" target="_blank" rel="noopener">TODO</a></p><h2 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h2><ul><li>PV: Physical Volume 物理卷</li><li>VG: Volume Group 卷组，由一个或多个PV组成。可以在其上创建一个或多个LV</li><li>LV: Logical Volume 逻辑卷，在其上可以创建文件系统</li><li>PE: Physical Extent 物理扩展盘区，每个PV都会被划分成PE，它是可以被LVM寻址的最小单元</li><li>LE: Logical Extent 逻辑扩展盘区，</li></ul><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>1) 物理磁盘被格式化为PV，空间被划分为一个个PE<br>2) 不同的PV加入到同一个VG中，其对应的所有PE都进入VG的PE池中<br>3) LVM从PE池中选择PE创建LV，不同物理盘中的PE可能会划分到同一个LV中<br>4) 在LV上创建文件系统后就可以挂载使用了<br>5) 对LV的扩容和缩减其实就是相应的增加或减少PE数量</p><p>创建逻辑卷时，定义了逻辑扩展盘区与物理扩展盘区的映射关系。</p><h2 id="创建流程"><a href="#创建流程" class="headerlink" title="创建流程"></a>创建流程</h2><h3 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# fdisk /dev/sdb</span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): </span><br><span class="line">First sector (2048-2097151, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-2097151, default 2097151): +300M</span><br><span class="line">Partition 1 of type Linux and of size 300 MiB is set</span><br><span class="line"></span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 1073 MB, 1073741824 bytes, 2097152 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x233e2ebd</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048      616447      307200   83  Linux</span><br><span class="line"></span><br><span class="line">Command (m for help): t</span><br><span class="line">Selected partition 1</span><br><span class="line">Hex code (type L to list all codes): 8e</span><br><span class="line">Changed type of partition 'Linux' to 'Linux LVM'</span><br><span class="line"></span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 1073 MB, 1073741824 bytes, 2097152 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x233e2ebd</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048      616447      307200   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h3 id="创建pv"><a href="#创建pv" class="headerlink" title="创建pv"></a>创建pv</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># pvcreate /dev/sdb1</span></span><br><span class="line">  Physical volume <span class="string">"/dev/sdb1"</span> successfully created.</span><br><span class="line">[root@localhost ~]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree  </span><br><span class="line">  /dev/sdb1         lvm2 ---  300.00m 300.00m</span><br><span class="line">[root@localhost ~]<span class="comment"># pvdisplay /dev/sdb1</span></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sdb1</span><br><span class="line">  VG Name               vg0</span><br><span class="line">  PV Size               300.00 MiB / not usable 4.00 MiB</span><br><span class="line">  Allocatable           yes </span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              74</span><br><span class="line">  Free PE               74</span><br><span class="line">  Allocated PE          0</span><br><span class="line">  PV UUID               8dqEi7-haMt-ciIM-ib2e-AUxp-f7ym-bCvlfw</span><br></pre></td></tr></table></figure><h3 id="创建vg"><a href="#创建vg" class="headerlink" title="创建vg"></a>创建vg</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vgcreate vg0 /dev/sdb1</span></span><br><span class="line">  Volume group <span class="string">"vg0"</span> successfully created</span><br><span class="line">[root@localhost ~]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree  </span></span><br><span class="line">  vg0      1   0   0 wz--n- 296.00m 296.00m</span><br><span class="line">[root@localhost ~]<span class="comment"># vgdisplay vg0</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               vg0</span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  1</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                0</span><br><span class="line">  Open LV               0</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               296.00 MiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              74</span><br><span class="line">  Alloc PE / Size       0 / 0           <span class="comment">#已分配的PE数量</span></span><br><span class="line">  Free  PE / Size       74 / 296.00 MiB <span class="comment">#剩余的PE数量</span></span><br><span class="line">  VG UUID               3FH6og-yXLt-NaL3-uehk-9lrJ-c4TD-r0z6Sa</span><br></pre></td></tr></table></figure><h3 id="创建lv"><a href="#创建lv" class="headerlink" title="创建lv"></a>创建lv</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvcreate -L 100m -n lv0 vg0</span></span><br><span class="line">  Logical volume <span class="string">"lv0"</span> created.</span><br><span class="line">[root@localhost ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  lv0  vg0    -wi<span class="_">-a</span>----- 100.00m  </span><br><span class="line">[root@localhost ~]<span class="comment"># lvdisplay /dev/vg0/lv0 </span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/vg0/lv0</span><br><span class="line">  LV Name                lv0</span><br><span class="line">  VG Name                vg0</span><br><span class="line">  LV UUID                Plb1kl-JGcg-0UfR-W3Ue-tDBc-D5Tc-tj6X0n</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2019-05-16 02:02:27 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 0</span></span><br><span class="line">  LV Size                100.00 MiB</span><br><span class="line">  Current LE             25</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     8192</span><br><span class="line">  Block device           253:2</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># pvdisplay /dev/sdb1</span></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sdb1</span><br><span class="line">  VG Name               vg0</span><br><span class="line">  PV Size               300.00 MiB / not usable 4.00 MiB</span><br><span class="line">  Allocatable           yes </span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              74</span><br><span class="line">  Free PE               49</span><br><span class="line">  Allocated PE          25    <span class="comment"># 可以看到已经有PE被分配出去了</span></span><br><span class="line">  PV UUID               8dqEi7-haMt-ciIM-ib2e-AUxp-f7ym-bCvlfw</span><br><span class="line">[root@localhost ~]<span class="comment"># vgdisplay vg0</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               vg0</span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  2</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                1</span><br><span class="line">  Open LV               0</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               296.00 MiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              74</span><br><span class="line">  Alloc PE / Size       25 / 100.00 MiB   <span class="comment"># 可以看到已经有PE被分配出去了</span></span><br><span class="line">  Free  PE / Size       49 / 196.00 MiB</span><br><span class="line">  VG UUID               3FH6og-yXLt-NaL3-uehk-9lrJ-c4TD-r0z6Sa</span><br></pre></td></tr></table></figure><p>创建LV时LV的大小有以下两种方式指定</p><ul><li>通过<code>-L</code>参数，表示物理大小</li><li>通过<code>-l</code>参数，使用相关VG/LV或PV大小的百分比来指定<ul><li>10%VG, 表示10%的VG总大小</li><li>20%FREE, 表示VG中剩余空间的20%</li><li>30%PVS, 表示PV集合中剩余空间的30%</li><li>该参数后面跟数值(非百分比)时，表示包含多少个PE大小。</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvremove /dev/vg0/lv0</span></span><br><span class="line">Do you really want to remove active logical volume vg0/lv0? [y/n]: y</span><br><span class="line">  Logical volume <span class="string">"lv0"</span> successfully removed</span><br><span class="line">[root@localhost ~]<span class="comment"># lvcreate -l 30%VG -n lv1 vg0</span></span><br><span class="line">  Logical volume <span class="string">"lv1"</span> created.</span><br><span class="line">[root@localhost ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  lv1  vg0    -wi<span class="_">-a</span>----- 88.00m                                                    </span><br><span class="line">[root@localhost ~]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree  </span></span><br><span class="line">  centos   1   2   0 wz--n-  &lt;9.00g      0 </span><br><span class="line">  vg0      1   1   0 wz--n- 296.00m 208.00m</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="格式化文件系统"><a href="#格式化文件系统" class="headerlink" title="格式化文件系统"></a>格式化文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs.ext3 /dev/vg0/lv1</span></span><br><span class="line">mke2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem label=</span><br><span class="line">OS <span class="built_in">type</span>: Linux</span><br><span class="line">Block size=1024 (<span class="built_in">log</span>=0)</span><br><span class="line">Fragment size=1024 (<span class="built_in">log</span>=0)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">22528 inodes, 90112 blocks</span><br><span class="line">4505 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">First data block=1</span><br><span class="line">Maximum filesystem blocks=67371008</span><br><span class="line">11 block groups</span><br><span class="line">8192 blocks per group, 8192 fragments per group</span><br><span class="line">2048 inodes per group</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">        8193, 24577, 40961, 57345, 73729</span><br><span class="line"></span><br><span class="line">Allocating group tables: <span class="keyword">done</span>                            </span><br><span class="line">Writing inode tables: <span class="keyword">done</span>                            </span><br><span class="line">Creating journal (4096 blocks): <span class="keyword">done</span></span><br><span class="line">Writing superblocks and filesystem accounting information: <span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># fdisk -l /dev/vg0/lv1 </span></span><br><span class="line"></span><br><span class="line">Disk /dev/vg0/lv1: 92 MB, 92274688 bytes, 180224 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># mkdir /usr1</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mount /dev/vg0/lv1 /usr1</span></span><br><span class="line">[root@localhost ~]<span class="comment"># df -ha</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg0-lv1       82M  1.6M   76M   2% /usr1</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h2><h3 id="扩容LV"><a href="#扩容LV" class="headerlink" title="扩容LV"></a>扩容LV</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  lv1  vg0    -wi-ao---- 88.00m                                                    </span><br><span class="line">[root@localhost ~]<span class="comment"># lvextend -L +100m /dev/vg0/lv1 </span></span><br><span class="line">  Size of logical volume vg0/lv1 changed from 88.00 MiB (22 extents) to 188.00 MiB (47 extents).</span><br><span class="line">  Logical volume vg0/lv1 successfully resized.</span><br><span class="line">[root@localhost ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  lv1  vg0    -wi-ao---- 188.00m </span><br><span class="line">[root@localhost ~]<span class="comment"># df -ha</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg0-lv1       82M  1.6M   76M   2% /usr1    <span class="comment"># LV已经扩容但是文件系统大小还时原来大小</span></span><br><span class="line">[root@localhost ~]<span class="comment"># resize2fs /dev/vg0/lv1 </span></span><br><span class="line">resize2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem at /dev/vg0/lv1 is mounted on /usr1; on-line resizing required</span><br><span class="line">old_desc_blocks = 1, new_desc_blocks = 1</span><br><span class="line">The filesystem on /dev/vg0/lv1 is now 192512 blocks long.</span><br><span class="line">[root@localhost ~]<span class="comment"># df -ha</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg0-lv1      178M  1.6M  169M   1% /usr1    <span class="comment"># 已经扩容</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvs |grep lv1</span></span><br><span class="line">  lv1  vg0    -wi-ao---- 188.00m                                                    </span><br><span class="line">[root@localhost ~]<span class="comment"># lvextend -l +50%FREE /dev/vg0/lv1 </span></span><br><span class="line">  Size of logical volume vg0/lv1 changed from 188.00 MiB (47 extents) to 244.00 MiB (61 extents).</span><br><span class="line">  Logical volume vg0/lv1 successfully resized.</span><br><span class="line">[root@localhost ~]<span class="comment"># lvs |grep lv1</span></span><br><span class="line">  lv1  vg0    -wi-ao---- 244.00m                                                    </span><br><span class="line">[root@localhost ~]<span class="comment"># df -ha |grep lv1</span></span><br><span class="line">/dev/mapper/vg0-lv1      178M  1.6M  169M   1% /usr1</span><br><span class="line">[root@localhost ~]<span class="comment"># resize2fs /dev/mapper/vg0-lv1 </span></span><br><span class="line">resize2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem at /dev/mapper/vg0-lv1 is mounted on /usr1; on-line resizing required</span><br><span class="line">old_desc_blocks = 1, new_desc_blocks = 1</span><br><span class="line">The filesystem on /dev/mapper/vg0-lv1 is now 249856 blocks long.</span><br><span class="line">[root@localhost ~]<span class="comment"># df -ha |grep lv1</span></span><br><span class="line">/dev/mapper/vg0-lv1      233M  2.1M  220M   1% /usr1</span><br></pre></td></tr></table></figure><p>lvextend 中 <code>-L</code> 和 <code>-l</code> 参数中如果没有使用 <code>+</code> 号，则表示扩容到指定大小</p><h3 id="扩容VG"><a href="#扩容VG" class="headerlink" title="扩容VG"></a>扩容VG</h3><p>当VG中没有空闲资源时需要先扩容VG才能扩容LV</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree </span><br><span class="line">  /dev/sdb1  vg0    lvm2 a--  296.00m 52.00m</span><br><span class="line">[root@localhost ~]<span class="comment"># pvcreate /dev/sdc1 </span></span><br><span class="line">  Physical volume <span class="string">"/dev/sdc1"</span> successfully created.</span><br><span class="line">[root@localhost ~]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sdb1  vg0    lvm2 a--  296.00m  52.00m</span><br><span class="line">  /dev/sdc1         lvm2 ---  511.00m 511.00m</span><br><span class="line">[root@localhost ~]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree </span></span><br><span class="line">  vg0      1   1   0 wz--n- 296.00m 52.00m</span><br><span class="line">[root@localhost ~]<span class="comment"># vgextend vg0 /dev/sdc1 </span></span><br><span class="line">  Volume group <span class="string">"vg0"</span> successfully extended</span><br><span class="line">[root@localhost ~]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree  </span></span><br><span class="line">  vg0      2   1   0 wz--n- 804.00m 560.00m</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  lv1  vg0    -wi<span class="_">-a</span>----- 244.00m</span><br><span class="line">[root@localhost ~]<span class="comment"># lvextend -l +100%FREE /dev/vg0/lv1 </span></span><br><span class="line">  Size of logical volume vg0/lv1 changed from 244.00 MiB (61 extents) to 804.00 MiB (201 extents).</span><br><span class="line">  Logical volume vg0/lv1 successfully resized.</span><br><span class="line">[root@localhost ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  lv1  vg0    -wi<span class="_">-a</span>----- 804.00m</span><br></pre></td></tr></table></figure><h2 id="缩减容量"><a href="#缩减容量" class="headerlink" title="缩减容量"></a>缩减容量</h2><ul><li>先umount设备</li><li>缩减文件系统大小</li><li>缩减LV大小</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># umount -l /usr1</span></span><br><span class="line">[root@localhost ~]<span class="comment"># resize2fs /dev/mapper/vg0-lv1 100M</span></span><br><span class="line">resize2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Please run <span class="string">'e2fsck -f /dev/mapper/vg0-lv1'</span> first.</span><br><span class="line">[root@localhost ~]<span class="comment"># e2fsck -f /dev/mapper/vg0-lv1 </span></span><br><span class="line">e2fsck 1.42.9 (28-Dec-2013)</span><br><span class="line">Pass 1: Checking inodes, blocks, and sizes</span><br><span class="line">Pass 2: Checking directory structure</span><br><span class="line">Pass 3: Checking directory connectivity</span><br><span class="line">Pass 4: Checking reference counts</span><br><span class="line">Pass 5: Checking group summary information</span><br><span class="line">/dev/mapper/vg0-lv1: 2369/206848 files (6.4% non-contiguous), 61211/823296 blocks</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># resize2fs /dev/mapper/vg0-lv1 100M</span></span><br><span class="line">resize2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Resizing the filesystem on /dev/mapper/vg0-lv1 to 102400 (1k) blocks.</span><br><span class="line">The filesystem on /dev/mapper/vg0-lv1 is now 102400 blocks long.</span><br><span class="line">[root@localhost ~]<span class="comment"># lvreduce -L 100M /dev/mapper/vg0-lv1 </span></span><br><span class="line">  WARNING: Reducing active logical volume to 100.00 MiB.</span><br><span class="line">  THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class="line">Do you really want to reduce vg0/lv1? [y/n]: y</span><br><span class="line">  Size of logical volume vg0/lv1 changed from 804.00 MiB (201 extents) to 100.00 MiB (25 extents).</span><br><span class="line">  Logical volume vg0/lv1 successfully resized.</span><br><span class="line">[root@localhost ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  lv1  vg0    -wi<span class="_">-a</span>----- 100.00m  </span><br><span class="line">[root@localhost /]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree  </span></span><br><span class="line">  vg0      2   1   0 wz--n- 804.00m 704.00m</span><br><span class="line">[root@localhost /]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree  </span><br><span class="line">  /dev/sdb1  vg0    lvm2 a--  296.00m 196.00m</span><br><span class="line">  /dev/sdc1  vg0    lvm2 a--  508.00m 508.00m</span><br></pre></td></tr></table></figure><h2 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h2>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> tool </category>
          
          <category> lvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins使用总结</title>
      <link href="/2019/05/13/jenkins/jenkins/"/>
      <url>/2019/05/13/jenkins/jenkins/</url>
      
        <content type="html"><![CDATA[<h2 id="常用链接"><a href="#常用链接" class="headerlink" title="常用链接"></a>常用链接</h2><ul><li><a href="https://jenkins.io/doc/pipeline/steps/" target="_blank" rel="noopener">pipeline steps reference</a></li><li><a href="https://jenkins.io/doc/pipeline/steps/workflow-scm-step/" target="_blank" rel="noopener">pipeline scm step(checkout)</a></li><li><a href="http://www.groovy-lang.org/documentation.html" target="_blank" rel="noopener">apache groovy doc</a></li><li><a href="https://github.com/SAP/jenkins-library" target="_blank" rel="noopener">SAP shared lib repo</a></li><li><a href="https://updates.jenkins.io/update-center.json" target="_blank" rel="noopener">Jenkins插件默认升级站点配置</a></li><li><a href="https://github.com/MovingBlocks/GroovyJenkins/blob/master/src/main/groovy/AddSSHNodeToJenkins.groovy" target="_blank" rel="noopener">groovy实现添加slave</a></li><li><a href="https://wiki.jenkins.io/" target="_blank" rel="noopener">官方wiki</a></li><li><a href="https://github.com/TYPO3-infrastructure/jenkins-pipeline-global-library-chefci" target="_blank" rel="noopener">pipeline_demo_sharedlib</a></li><li><a href="https://github.com/TYPO3-cookbooks/site-chefcitypo3org/blob/master/Jenkinsfile" target="_blank" rel="noopener">pipeline_demo_jenkinsfile</a></li></ul><h2 id="pipeline使用"><a href="#pipeline使用" class="headerlink" title="pipeline使用"></a>pipeline使用</h2><h3 id="官方pipeline示例"><a href="#官方pipeline示例" class="headerlink" title="官方pipeline示例"></a><a href="https://jenkins.io/doc/pipeline/examples/" target="_blank" rel="noopener">官方pipeline示例</a></h3><h3 id="并行任务配置"><a href="#并行任务配置" class="headerlink" title="并行任务配置"></a><a href="/2019/05/30/jenkins/jenkins-pipeline-parallel">并行任务配置</a></h3><h3 id="Jenkins-pipeline控制并行执行job个数"><a href="#Jenkins-pipeline控制并行执行job个数" class="headerlink" title="Jenkins pipeline控制并行执行job个数"></a><a href="http://www.lujun.org.cn/?p=4025" target="_blank" rel="noopener">Jenkins pipeline控制并行执行job个数</a></h3><h2 id="shared-lib"><a href="#shared-lib" class="headerlink" title="shared-lib"></a>shared-lib</h2><h2 id="pipeline代码调试"><a href="#pipeline代码调试" class="headerlink" title="pipeline代码调试"></a>pipeline代码调试</h2><h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><h3 id="centos安装jenkins"><a href="#centos安装jenkins" class="headerlink" title="centos安装jenkins"></a><a href="/2019/07/16/centos/centos-jenkins-install">centos安装jenkins</a></h3><h3 id="Jenkins中使用Grab下载第三方Jar"><a href="#Jenkins中使用Grab下载第三方Jar" class="headerlink" title="Jenkins中使用Grab下载第三方Jar"></a><a href="/2019/07/16/groovy/jenkins-groovy-grape">Jenkins中使用Grab下载第三方Jar</a></h3><h3 id="Jenkins序列化"><a href="#Jenkins序列化" class="headerlink" title="Jenkins序列化"></a><a href="/2019/07/22/jenkins/jenkins-serialization">Jenkins序列化</a></h3><h3 id="Multijob不能调用pipeline任务"><a href="#Multijob不能调用pipeline任务" class="headerlink" title="Multijob不能调用pipeline任务"></a>Multijob不能调用pipeline任务</h3><p><a href="https://issues.jenkins-ci.org/browse/JENKINS-38825" target="_blank" rel="noopener">升级Multijob插件到1.32及以上</a></p><h3 id="admin密码丢失"><a href="#admin密码丢失" class="headerlink" title="admin密码丢失"></a>admin密码丢失</h3><ul><li>初始密码: <code>${jenkins_home}/secrets/initialAdminPassword</code></li><li><p>修改过密码后忘记<br>1) 将 <code>${jenkins_home}/config.xml</code> 文件中以下内容修改为false</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">useSecurity</span>&gt;</span>true<span class="tag">&lt;/<span class="name">useSecurity</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2) 重启jenkins服务<br>3) 系统管理 -&gt; 全局安全配置 中 启用安全<br>4) 系统管理 -&gt; 管理用户 中 重置密码</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> 持续集成 </category>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> jenkins </tag>
            
            <tag> pipeline </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode使用总结</title>
      <link href="/2019/05/13/vscode-usage/"/>
      <url>/2019/05/13/vscode-usage/</url>
      
        <content type="html"><![CDATA[<h2 id="vscode配置"><a href="#vscode配置" class="headerlink" title="vscode配置"></a>vscode配置</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"workbench.colorTheme"</span>: <span class="string">"One Dark Pro"</span>,</span><br><span class="line">  <span class="attr">"workbench.iconTheme"</span>: <span class="string">"vscode-icons"</span>,</span><br><span class="line">  <span class="attr">"editor.renderWhitespace"</span>: <span class="string">"all"</span>,</span><br><span class="line">  <span class="attr">"editor.renderControlCharacters"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"window.zoomLevel"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"editor.fontSize"</span>: <span class="number">16</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm使用总结</title>
      <link href="/2019/05/13/npm-usage/"/>
      <url>/2019/05/13/npm-usage/</url>
      
        <content type="html"><![CDATA[<h2 id="npm使用淘宝镜像"><a href="#npm使用淘宝镜像" class="headerlink" title="npm使用淘宝镜像"></a>npm使用淘宝镜像</h2><h3 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="永久设置"><a href="#永久设置" class="headerlink" title="永久设置"></a>永久设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>该方式等同于在<code>~/.npmrc</code>文件中添加<code>registry=https://registry.npm.taobao.org</code><br>可以通过<code>npm config get registry</code>确认是否生效</p><h3 id="使用cnpm"><a href="#使用cnpm" class="headerlink" title="使用cnpm"></a>使用cnpm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cnpm -g --registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>cnpm和npm用法完全一致，只是在执行命令时将npm改为cnpm</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建blog</title>
      <link href="/2019/05/12/hexo-blog/"/>
      <url>/2019/05/12/hexo-blog/</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>是一个快速、简洁且高效的博客框架。具体内容请参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官网文档</a>。</p><p>主题Next修改参考<a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">官方文档</a></p><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><ul><li>nodejs</li><li>github个人仓库</li><li>git</li></ul><h3 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="config-yml配置"><a href="#config-yml配置" class="headerlink" title="_config.yml配置"></a>_config.yml配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment"># 网站使用的语言，取值参考themes下面的languages目录中的配置</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line">  <span class="comment"># path和username要一致，且git中repo的命令必须为name.github.io</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:path/username.github.io.git</span></span><br></pre></td></tr></table></figure><h3 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h3><ul><li>hexo init [folder]<br>新建一个网站，如果未指定folder，则默认在当前位置创建</li><li>hexo new [layout] <title><br>新建文章，如果未指定layout，则使用_config.yml中的default_layout代替</title></li><li>hexo generate [option]<br>生成静态文件，可以简写为<code>hexo g</code>。<br>option:<ul><li>-d,–deploy 文件生成后立即部署</li><li>-w,–watch 监视文件变化</li></ul></li><li>hexo server<br>启动服务器。默认访问路径为 <a href="http://localhost:4000。可以简写为`hexo" target="_blank" rel="noopener">http://localhost:4000。可以简写为`hexo</a> s`</li><li>hexo deploy<br>部署网站。可以简写为<code>hexo d</code>。可以通过指定<code>-g</code>参数指定部署前先生成静态文件。</li><li>hexo clean<br>清除缓存文件(db.json)和已生成的静态文件(public/*)</li></ul><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><table><thead><tr><th>参数</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>layout</td><td>布局</td><td></td></tr><tr><td>title</td><td>文章标题</td><td></td></tr><tr><td>data</td><td>创建时间</td><td></td></tr><tr><td>updated</td><td>更新时间</td><td></td></tr><tr><td>comments</td><td>开启评论</td><td>默认值:true</td></tr><tr><td>tags</td><td>标签(不适用于分页)</td><td>配置多个时，标签没有顺序和层次</td></tr><tr><td>categories</td><td>分类(不适用于分页)</td><td>配置多个时，分类具有顺序和层次</td></tr></tbody></table><h3 id="Next增加站内搜索"><a href="#Next增加站内搜索" class="headerlink" title="Next增加站内搜索"></a>Next增加站内搜索</h3><ol><li>安装插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><ol start="2"><li>修改hexo配置</li></ol><p>在hexo目录下的<code>_config.yml</code>中增加以下内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure><ol start="3"><li>next主题增加搜索入口</li></ol><p>在<code>themes/next/_config.yml</code>文件中打开local_search</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> framework </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
